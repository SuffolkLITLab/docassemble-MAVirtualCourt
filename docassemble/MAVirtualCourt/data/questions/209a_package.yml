---
include:
 - 209A_Page_1.yml
 #- 209A_page_2.yml # This one is obsolete
 - 209A-child-support.yml
 - defendant-information-209A.yml
 - 209A_affidavit.yml
 - 209A_affidavit_disclosing_care_or_custody_proceedings.yml
 - 209A_complaint_for_protection_from_abuse_probation.yml
 - motion-for-impoundment.yml
 # - 209A-review.yml
 - plaintiff-confidential.yml 
 - escape.yml
---
metadata:
  back button label: Undo
---
modules:
  - .phone
---
features:
  navigation: True
  question help button: True
---
sections:
  - section_intro: Introduction
  - section_basic: Basic information
  - section_relationship: Your relationship
  - section_children: Children
  - section_affidavit: Your affidavit
  - section_children_relief: Protection for Children
  - section_relief: What you need
  # - section_custody: Custody
  - section_child_support: Child support
  - section_defendant_info: Identifying Defendant
  - section_your_info: Your information
  - section_privacy: Keeping your information private
  - section_care_custody: Past care or custody cases
  - section_cases_with_defendant: Other cases with Defendant
  - section_court: Court selection
  - section_signature: Signing
  - download_screen: Download
---
scan for variables: False
mandatory: True
code: |
  package_version_number  # Ensure the package version number is defined so available for show_id.js

  set_interview_defaults # Set some things that are true on any 209A
  
  ##################### Intro screen
  basic_questions_intro_screen
  main_209A_package_intro
  nav.set_section('section_basic')  
  who_protecting_screener # We don't use this yet?  
  users[0].name.first
  if who_protecting_screener == "someone else":
    plaintiff_assistant_relationship_to_plaintiff
  # plaintiff_is_major_yes # Ask for age
  if plaintiff_is_major_yes: # Plaintiff over 18
    plaintiff_is_major_no = False
    # plaintiff_assistant_name = DAEmpty()
    plaintiff_assistant_relationship_to_plaintiff = DAEmpty()   
  else: # if not over 18
    plaintiff_is_major_no = True
    if who_protecting_screener == 'someone else':
      if plaintiff_assistant_relationship_to_plaintiff not in ('parent', 'guardian','advocate'):
        refer_to_advocate
      else:
        dcf_warning_given
    else: # not protecting someone else
      if plaintiff_assistant_type == 'self':
        refer_to_advocate
      else:
        plaintiff_assistant_relationship_to_plaintiff = plaintiff_assistant_type
        plaintiff_assistant_type_name
        plaintiff_assistant_name
        dcf_warning_given

  if who_protecting_screener == 'someone else':
    tell_user_about_first_person_questions   
    
  other_parties.there_are_any = True
  other_parties[0].name.first
  user_saw_what_to_expect

  ########################## Page 1
  nav.set_section('section_relationship')
  user_saw_relationship
  nav.set_section('section_children')
  defendant_and_plaintiff_are_parents_of_child
  plaintiff_has_children_parent_of
  children.gather()
  plaintiff_has_children_cares_for
  children_cares_for.gather()
  # relationship_to_defendant_unmarried
  
  complaint_209A_labeled_page10003 # Page 1
  nav.set_section('section_affidavit') # these are part of the affidavit really
  user_saw_abuse_explanation
  defendant_abuse_caused_physical_harm
  if no_abuse_checked:
    abuse_does_not_qualify

  ############################ Affidavit
  nav.set_section('section_affidavit')
  complaint_209A_Affidavit # Main affidavit
  # From page 1
  incident_date # Filled in with code, I think
  if plaintiff_has_minor_children:
    include_children_in_order
    A_complaint_for_protection_from_abuse_probation_copy0005 # Page 2
  # if no_abuse_checked:
  #  abuse_does_not_qualify # placeholder question not sure we even want the option of no abuse checked. Ask SMEs
    # refer_to_258E_resources # Maybe this info is wrong

  nav.set_section('section_relief')
  ############################ Relief
  # From page 1
  order_defendant_stop_abuse_yes # make sure this gets defined, but it will always be True via a code block
  if not order_defendant_remain_away_plaintiff_residence_yes:
    If_this_is_an_apartment_building_or_other_multiple_family_dwelling_check_here = DAEmpty()
  order_defendant_pay_yes
  if not order_defendant_pay_yes:
    losses_caused_by_defendant = DAEmpty()
    order_defendant_pay_amount = DAEmpty()

  order_impound_plaintiff_address_residential_yes
  order_other_relief_yes
  if not order_other_relief_yes: # triggers asking about relief
    other_relief = DAEmpty()

  order_relief_ex_parte

  ####################### Child support
  nav.set_section('section_child_support')  
  if plaintiff_has_minor_children and len(children_of_both) and wants_child_support_yes:
      if not existing_order:
        Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008   # Child support
      else:
        explain_no_child_support

  ############################## Defendant info
  # From page 1
  nav.set_section('section_defendant_info')
  defendantinformation209A0008_intro
  defendant_has_alias # redundant to def. information section
  
  defendantinformation209A0008

  ########################## Plaintiff info
  nav.set_section('section_your_info')
  A_Plaintiff_Confidential_Information0011
  
  nav.set_section('section_privacy')
  impoundment_intro
  if asked_for_impoundment:
    a_258e_motion_for_impoundment0019

  # Care or custody proceedings
  nav.set_section('section_care_custody')
  have_had_paternity_cases = False # We'll reevaluate below
  have_had_custody_cases  = False
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both):
    if has_participated_custody_case or know_of_other_custody_case:
      have_had_custody_cases = True
      A_affidavit_disclosing_care_or_custody_proceedings0009 # Aff. care or custody
      for case in other_care_custody_proceedings:
        if case.case_status == "paternity":
          have_had_paternity_cases = True 
          break # One match is good enough
      if not have_had_paternity_cases:
        have_had_paternity_cases = ask_had_paternity_case  # trigger a question if we didn't answer via care/custody questions       
      # Come back to child addresses if needed          
      evaluate_child_addresses # 
  
  # From page 1
  # Other cases involving P/D but not about the children
  nav.set_section('section_cases_with_defendant')
  other_cases.gather()
  cases_other_safe_for_pdf
  plaintiff_and_defendant_other_case_description

  nav.set_section('section_court')
  fill_in_court_name # used in aff. of care and custody
  # Make sure we don't leave any computed values empty
  # we have some that we need to set at end instead of in regular interview flow
  # because we ask them out of order
  trigger_page1_computed_values 
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both):
    if has_participated_custody_case or know_of_other_custody_case:
      trigger_aff_care_or_custody_computed_variables
  # Most others can be asked in-line

  docket_numbers[0]
  day # Triggers date question in format for aff. of care and custody
  
  nav.set_section('section_signature')
  signature_date
  preview_209a_package

  users[0].states_above_true
  signature_fields = ['users[0].signature']
  basic_questions_signature_flow
  users[0].signature
  
  final_attachment_bundle
  nav.set_section('section_filing')
  final_attachment_collection.finished
  download_screen
---
id: dev hud etc
code: |
  # For info at the top of the screen on dev and test servers
  package_version_number = str( docassemble.MAVirtualCourt.__version__ )
---
if: |
  who_protecting_screener == "someone else"
question: |
  What is the name of the person who needs the order?
fields:
  - First Name: users[0].name.first
  - Middle Name: users[0].name.middle
    required: False
  - Last Name: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: explain first person questions
question: |
  You are helping ${users.familiar()} fill out this form
subquestion: |
  Answer the rest of the questions as if you are ${users.familiar()}. 
  
  Some answers need to be in ${users.familiar()}'s own words.
field: tell_user_about_first_person_questions  
---
id: preview form
question: |
  Preview your document
subquestion: |
  Your document is almost ready to sign. Before you sign it,
  tap on the preview image below to view it in a new window.

  Remember to come back to this screen to sign and download
  your final set of forms.

  ${pdf_concatenate(final_attachment_preview, filename="209a_preview.pdf")}

  Tap ${word("Next")} when you are ready to sign.
field: preview_209a_package
---
initial: True
code: |
  after_hours = ((current_datetime() > current_datetime().replace(hour=16,minute=30)) or (current_datetime() < current_datetime().replace(hour=8,minute=30)) )
  court_closed_today = (today().dow > 5)
---
reconsider:
  - final_attachment_bundle
id: download
question: |
  Your forms are ready to download and file
subquestion: |
  1. Look over the forms below.
  1. If they look correct, download them or email them to yourself.
  1. You still need to deliver them to the ${courts[0]}, when you are ready.
  4. Call the ${courts[0]}'s clerk: <a href="tel:${courts[0].phone}">${courts[0].phone}</a> to find out how they want you to send your forms to them.
  % if court_closed_today:
  4. The court is closed today. If you need help to file these forms now, call your local police station.
  % elif after_hours:
  5. The court is only open between 8:30 AM and 4:30 PM. If you need help to file this form now, call your local police station.
  % endif
  6. Your hearing will probably be over the phone or Zoom video conference.  
     The address of your court, if you need it, is: ${courts[0].address.on_one_line()}.  

  ${pdf_concatenate(final_attachment_bundle, filename="209a_petition.pdf")} 
event: download_screen  
attachment code: final_attachment_collection
---
comment: |
  ${action_button_html(url_action('review_all_sections'), icon='edit', label=word("Make changes"))}
---
comment: |
  ${action_button_html(url_action('review_all_sections'), icon='edit', label=word("Make changes"))}
---
comment: |
  Build some variables dynamically
---
code: |
  # There are never 2 defendants or two plaintiffs
  users.there_is_another = False
  plaintiffs=users
  other_parties.there_is_another = False
  defendant = other_parties # We need this for Affidavit interview currently
  defendants = other_parties
  user_role = "plaintiff"
  confidential_address = True
  docket_numbers[0] = '' # we never know docket number in advance
  docket_numbers.auto_gather=False
  docket_numbers.gathered=True
  needs_attorney_signature = False
  allowed_courts = [
      'Boston Municipal Court',
      'District Court',
      'Probate and Family Court',
      'Superior Court',
    ]
  preferred_court = ''
  set_interview_defaults = True
---
code: |
  # Set no_abuse_checked via the 209A Affidavit questions
  no_abuse_checked = (not defendant_abuse_caused_fear_of_serious_physical_harm 
    and not defendant_abuse_attempted_physical_harm
    and not defendant_abuse_caused_physical_harm
    and not defendant_abuse_caused_sexual_assault_force
    and not defendant_abuse_caused_sexual_assault_make)
---
id: Signing under oath
question: |
  Signing under oath 
subquestion: |
  When you sign your name you are declaring, "{under penalty of perjury}” that what you put in your affidavit is {true to the best of your knowledge}.
  
  Do you swear under penalty of perjury that all your answers to the questions in this interview are true, to the best of your knowledge?
fields:
  - no label: users[0].states_above_true
    datatype: checkboxes
    minlength: 1
    choices:
      - I swear that my answers on this form are the truth under penalties of perjury.
    validation messages:
      minlength: |
        You cannot keep going unless you did your best to tell the truth.
terms:
  - under penalty of perjury: |
      means you swear your answers are true, as far as you know.  
         
      Swearing "under penalty of perjury" means the court can punish you if your answers are not true to the best of your knowledge.  
      
      The court cannot punish you if your answers are about things you saw, heard, or felt.  
      The court cannot punish you if you have good reason to believe that your answers are true.
  - true to the best of your knowledge: |
      Something is true "to the best of your knowledge" if you were there and saw, heard, or felt it.  
      Something is true to the best of your knowledge if you have good reason to believe it is true.
---
reconsider: True
code: |
  attachment_temp = []  
  # Build the 209A package. Up to 8 total forms
  # Page 1: complaint_209A_labeled_page10003_attachment
  #     page1_addendum
  # Complaint Affidavit: complaint_209A_Affidavit_attachment
  #     affidavit_addendum, triggered by addAddendum_affidavit
  # Page 2: A_complaint_for_protection_from_abuse_probation_copy0005_attachment
  #     page2_addendum, triggered by addAddendum_page2
  # Child support: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment
  # Affidavit care/custody: A_affidavit_disclosing_care_or_custody_proceedings0009_attachment 
  #     care_or_custody_proceedings_appendix_variable, triggered by need_care_custody_addendum
  # Plaintiff info: A_Plaintiff_Confidential_Information0011_attachment
  #     confidential_info_addendum
  # Defendant info: defendantinformation209A0008_attachment
  #    defendant_addendum
  # motion to impound: a_258e_motion_for_impoundment0019_attachment
  #    impound_addendum
  
  # always include cover page for user
  attachment_temp.append(next_steps)
  # Always include page 1 
  attachment_temp.append(complaint_209A_labeled_page10003_attachment)
  if need_page1_addendum:
    attachment_temp.append(page1_addendum)
  attachment_temp.append( complaint_209A_Affidavit_attachment )
  if addAddendum_affidavit:
    attachment_temp.append(affidavit_addendum)
  # include page 2 only if there are children
  if plaintiff_has_minor_children: 
    attachment_temp.append( A_complaint_for_protection_from_abuse_probation_copy0005_attachment )
    if addAddendum_page2:
      attachment_temp.append(page2_addendum)
    if defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and have_had_custody_cases :
      attachment_temp.append(A_affidavit_disclosing_care_or_custody_proceedings0009_attachment)
      if need_care_custody_addendum:
        attachment_temp.append(care_or_custody_proceedings_appendix_variable)
    
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and wants_child_support_yes and not existing_order:
    attachment_temp.append( Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment)
    if addAddendum_chdSupport:
      attachment_temp.append(chdSupport_addendum)
  attachment_temp.append(A_Plaintiff_Confidential_Information0011_attachment)
  if addAddendum_confidential:
    attachment_temp.append(confidential_info_addendum)
  attachment_temp.append(defendantinformation209A0008_attachment)
  if addAddendum_defendant:
    attachment_temp.append(defendant_addendum)
  if asked_for_impoundment:
    attachment_temp.append(a_258e_motion_for_impoundment0019_attachment)
    if addAddendum_impound:
      attachment_temp.append(impound_addendum)  
  final_attachment_bundle = attachment_temp
---
reconsider: True
code: |
  # PREVIEW version of the attachment
  attachment_preview_temp = []  
  # Always include page 1 
  attachment_preview_temp.append(complaint_209A_labeled_page10003_attachment_preview)
  if need_page1_addendum:
    attachment_preview_temp.append(page1_addendum)
  attachment_preview_temp.append( complaint_209A_Affidavit_attachment_preview )
  if addAddendum_affidavit:
    attachment_preview_temp.append(affidavit_addendum)
  # include page 2 only if there are children
  if plaintiff_has_minor_children: 
    attachment_preview_temp.append( A_complaint_for_protection_from_abuse_probation_copy0005_attachment_preview )
    if addAddendum_page2:
      attachment_preview_temp.append(page2_addendum)
    if defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and have_had_custody_cases:
      attachment_preview_temp.append(A_affidavit_disclosing_care_or_custody_proceedings0009_attachment_preview)
      if need_care_custody_addendum:
        attachment_preview_temp.append(care_or_custody_proceedings_appendix_variable)
    
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and not existing_order and wants_child_support_yes:
    attachment_preview_temp.append( Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment_preview)
    if addAddendum_chdSupport:
      attachment_preview_temp.append(chdSupport_addendum)
  attachment_preview_temp.append(A_Plaintiff_Confidential_Information0011_attachment_preview)
  if addAddendum_confidential:
    attachment_preview_temp.append(confidential_info_addendum)
  attachment_preview_temp.append(defendantinformation209A0008_attachment_preview)
  if addAddendum_defendant:
    attachment_preview_temp.append(defendant_addendum)
  if asked_for_impoundment:
    attachment_preview_temp.append(a_258e_motion_for_impoundment0019_attachment_preview)
    if addAddendum_impound:
      attachment_preview_temp.append(impound_addendum)  
  final_attachment_preview = attachment_preview_temp
---
reconsider: is_dating_only
id: court information
sets:
  - courts[0].name
question: |
  Where will you file your request?
subquestion: |
  Choose a court from the list below that serves the address where you live, or
  an address that you left because of ${other_parties.familiar()}'s abuse.

  % if is_dating_only:
  You cannot file in the Superior Court because your only relationship with 
  ${other_parties.familiar()} is "dating".
  % endif

  % if len(children_of_both) and wants_visitation_orders:
  Because you asked for visitation, you **can only** file your case in the Probate and Family Court.

  [I want to file in a different court. I changed my mind about visitation](${url_action('wants_visitation_orders')}).
  % endif

  You can try finding your local court by using the [Courthouse
  Locator](https://www.mass.gov/guides/find-a-courthouse-serving-you).
  
  Tap ${word("help")} to learn more about choosing a court. This can be
  complicated in a 209A restraining order.
fields:
  - Court name: courts[0]
    datatype: object
    choices: macourts.filter_courts(["Probate and Family Court"])
    object labeler: |
      lambda y: (str(y) +' (' + y.address.city + ')') if y.address.city not in str(y) else str(y)    
    show if:
      code: |
        len(children_of_both) and wants_visitation_orders
  - Court name: courts[0]
    datatype: object
    choices: macourts.filter_courts(["District Court","Boston Municipal Court", "Probate and Family Court"])
    object labeler: |
      lambda y: (str(y) +' (' + y.address.city + ')') if y.address.city not in str(y) else str(y)    
    show if:
      code: |
        is_dating_only
  - Court name: courts[0]
    datatype: object
    choices: macourts.filter_courts(["District Court","Boston Municipal Court", "Probate and Family Court", "Superior Court"])
    object labeler: |
      lambda y: (str(y) +' (' + y.address.city + ')') if y.address.city not in str(y) else str(y)    
    show if:
      code: |
        not is_dating_only and not (len(children_of_both) and wants_visitation_orders)
continue button field: ask_court_question    
help: |
  You can get a 209A restraining order at the District Court near where you live
  or the Probate and Family Court in your county.  If you live in Boston, you
  can go to the Boston Municipal Court (BMC) near where you live instead of a
  District Court. You can also go to the Superior Court in your county.  Most
  people get 209A restraining orders from District Court, BMC, or Probate and
  Family Court.  Superior Court restraining orders are rare but may be an option
  when other available courts are closed due to the COVID-19 crisis. 
  
  If you have moved to another town in Massachusetts since the abuse, you can go
  to the court where you live now or to the court for an address that you had to
  leave because of the abuse. 
  
  Some things to think about when you are deciding which court is better for you
  are:  

  #### If the other parent wants to visit your child  
  The District Court is not supposed to order visitation between the other
  parent and your child as part of a 209A case. The Probate and Family Court can
  order visitation in a 209A case.  If you want to get visitation settled right
  away, you may want to go to the Probate and Family Court to file for the
  209A restraining order. If you do not want the court to decide about
  visitation, you might want to go to the District Court for your 209A
  restraining order. 
  #### If the person who abused you is facing criminal charges  
  If the person who abused you is facing criminal charges related to the
  domestic violence, you may want to file for your 209A restraining order at
  the District or Superior Court where that case is. That way, you may be able
  to work with the same Victim/Witness Advocate for both cases.
  #### If you are already in Probate and Family Court with another case  
  Sometimes, it is easier and less complicated to file your 209A Application in Probate and Family Court **if you already have a case going on there now**. If you file in District Court, they may have to get in touch with the Probate and Family Court - this back and forth may slow things down and take more time that you do not have.
  
  [Read more](https://www.masslegalhelp.org/domestic-violence/where-can-i-get-209a).
---
id: signature date
question: |
  When do you plan to file your application?
subquestion: |
  We automatically answer "today" for you, below. You can change the date.
  
  If you are keeping these forms as part of your safety plan, you can always cross out today's date and write in the date you actually file.
fields: 
  - Date: signature_date
    datatype: date
    default: ${today().format("yyyy-MM-dd")}
---
comment: |
  TODO: integrate a method to display form title on intro screen dynamically
id: basic questions intro screen
question: |
  Ask the court for a 209A Abuse Prevention Order: MassAccess Project
subquestion: |
 
  This website can help you complete and download your forms in 3 steps:
  
  Step 1. Answer questions that will fill in your forms for you.  
  Step 2. Preview the completed forms.  
  Step 3. Email the forms to yourself or download them so you can send the forms to the court or keep them as part of your safety plan.

  Tap the {green words} in any screen for a definition or more information.

  This form can take up to 1 and 1/2 hours
  to complete, depending on your specific situation.
  
  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif

fields:
  - To continue, please read the [terms of use](https://massaccess.suffolklitlab.org/privacy/): acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: basic_questions_intro_screen
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
right: |
  % if user_has_saved_answers:
  ${fa_icon("bell", color="primary", size="sm")}
  Saved answers available!  
  
  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), size="sm" )}
  % endif    
---
objects:
  - final_attachment_collection: DAFileCollection
---
code: |
  final_attachment_collection.pdf = pdf_concatenate(final_attachment_bundle)
  final_attachment_collection.info = {'name': '209A (Abuse Prevention Order/Restraining Order) Application', 
                      'filename': '209a_restraining_order_application',
                      'description': '',
                      'file': {'pdf': final_attachment_collection.pdf.number},
                      'mimetype': {'pdf': final_attachment_collection.pdf.mimetype}
                      }
  final_attachment_collection.finished = True
---
attachment: 
  docx template file: 209A_next_steps_for_user.docx
  variable name: next_steps