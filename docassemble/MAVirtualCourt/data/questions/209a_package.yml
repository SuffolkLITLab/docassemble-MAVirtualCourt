---
include:
 - 209A_Page_1.yml
 #- 209A_page_2.yml # This one is obsolete
 - 209A-child-support.yml
 - defendant-information-209A.yml
 - 209A_affidavit.yml
 - 209A_affidavit_disclosing_care_or_custody_proceedings.yml
 - 209A_complaint_for_protection_from_abuse_probation.yml
 - motion-for-impoundment.yml
 - 209A-review.yml
 - plaintiff-confidential.yml 
 - escape.yml
---
modules:
  - .phone
---
code: |
  allowed_courts = [
      "Boston Municipal Court",
      "District Court",
      "Superior Court",
      "Probate and Family Court",
      ]
---
features:
  navigation: True
  question help button: True
---
sections:
  - section_intro: Introduction
  - section_basic: Basic information
  - section_relationship: Your relationship
  - section_affidavit: Your statement
  - section_children: Children  
  - section_children_relief: Protection for Children
  - section_relief: What you need
  # - section_custody: Custody
  - section_child_support: Child support
  - section_defendant_info: Identifying Defendant
  - section_your_info: Your information
  - section_privacy: Keeping your information private
  - section_care_custody: Past care or custody cases
  - section_cases_with_defendant: Other cases with Defendant
  - section_court: Court selection
  - section_signature: Signing
  - section_filing: Download
---
scan for variables: False
mandatory: True
code: |
  set_interview_defaults # Set some things that are true on any 209A
  
  ##################### Intro screen
  basic_questions_intro_screen
  main_209A_package_intro
  nav.set_section('section_basic')  
  who_protecting_screener # We don't use this yet?  
  users[0].name.first
  if who_protecting_screener == "someone else":
    plaintiff_assistant_relationship_to_plaintiff
  # plaintiff_is_major_yes # Ask for age
  if plaintiff_is_major_yes: # Plaintiff over 18
    plaintiff_is_major_no = False
    # plaintiff_assistant_name = DAEmpty()
    plaintiff_assistant_relationship_to_plaintiff = DAEmpty()   
  else: # if not over 18
    plaintiff_is_major_no = True
    if who_protecting_screener == 'someone else':
      if plaintiff_assistant_relationship_to_plaintiff not in ('parent', 'guardian','advocate'):
        refer_to_advocate
      else:
        dcf_warning_given
    else: # not protecting someone else
      if plaintiff_assistant_type == 'self':
        refer_to_advocate
      else:
        plaintiff_assistant_relationship_to_plaintiff = plaintiff_assistant_type
        plaintiff_assistant_type_name
        plaintiff_assistant_name
        dcf_warning_given

  if who_protecting_screener == 'someone else':
    tell_user_about_first_person_questions   
    
  other_parties.there_are_any = True
  other_parties[0].name.first
  user_saw_what_to_expect

  ########################## Page 1
  nav.set_section('section_relationship')
  user_saw_relationship
  defendant_and_plaintiff_are_parents_of_child
  plaintiff_has_children_parent_of
  children.gather()
  plaintiff_has_children_cares_for
  children_cares_for.gather()
  # relationship_to_defendant_unmarried
  
  complaint_209A_labeled_page10003 # Page 1
  nav.set_section('section_affidavit') # these are part of the affidavit really
  user_saw_abuse_explanation
  defendant_abuse_caused_physical_harm
  if no_abuse_checked:
    abuse_does_not_qualify

  ############################ Affidavit
  nav.set_section('section_affidavit')
  complaint_209A_Affidavit # Main affidavit
  # From page 1
  incident_date # Filled in with code, I think
  nav.set_section('section_children')
  if plaintiff_has_minor_children:
    include_children_in_order
    A_complaint_for_protection_from_abuse_probation_copy0005 # Page 2
  # if no_abuse_checked:
  #  abuse_does_not_qualify # placeholder question not sure we even want the option of no abuse checked. Ask SMEs
    # refer_to_258E_resources # Maybe this info is wrong

  nav.set_section('section_relief')
  ############################ Relief
  # From page 1
  order_defendant_stop_abuse_yes # make sure this gets defined, but it will always be True via a code block
  if not order_defendant_remain_away_plaintiff_residence_yes:
    If_this_is_an_apartment_building_or_other_multiple_family_dwelling_check_here = DAEmpty()
  order_defendant_pay_yes
  if not order_defendant_pay_yes:
    losses_caused_by_defendant = DAEmpty()
    order_defendant_pay_amount = DAEmpty()

  order_impound_plaintiff_address_residential_yes
  order_other_relief_yes
  if not order_other_relief_yes: # triggers asking about relief
    other_relief = DAEmpty()

  order_relief_ex_parte

  ####################### Child support
  nav.set_section('section_child_support')  
  if plaintiff_has_minor_children and len(children_of_both) and wants_child_support_yes:
      if not existing_order:
        Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008   # Child support
      else:
        explain_no_child_support

  ############################## Defendant info
  # From page 1
  nav.set_section('section_defendant_info')
  defendantinformation209A0008_intro
  defendant_has_alias # redundant to def. information section
  
  defendantinformation209A0008

  ########################## Plaintiff info
  nav.set_section('section_your_info')
  A_Plaintiff_Confidential_Information0011
  
  nav.set_section('section_privacy')
  impoundment_intro
  if asked_for_impoundment:
    a_258e_motion_for_impoundment0019

  # Care or custody proceedings
  nav.set_section('section_care_custody')
  have_had_paternity_cases = False # We'll reevaluate below
  have_had_custody_cases  = False
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both):
    if has_participated_custody_case or know_of_other_custody_case:
      have_had_custody_cases = True
      A_affidavit_disclosing_care_or_custody_proceedings0009 # Aff. care or custody
      for case in other_care_custody_proceedings:
        if case.case_status == "paternity":
          have_had_paternity_cases = True 
          break # One match is good enough
      if not have_had_paternity_cases:
        have_had_paternity_cases = ask_had_paternity_case  # trigger a question if we didn't answer via care/custody questions       
      # Come back to child addresses if needed          
      evaluate_child_addresses # 
  
  # From page 1
  # Other cases involving P/D but not about the children
  nav.set_section('section_cases_with_defendant')
  other_cases.gather()
  cases_other_safe_for_pdf
  plaintiff_and_defendant_other_case_description

  nav.set_section('section_court')
  for address in users[0].previous_addresses + [users[0].address]:
    address.geolocate()
  all_matches = macourts.matching_courts(users[0].previous_addresses + [users[0].address], court_types=allowed_courts)
  courts[0]
  fill_in_court_name # used in aff. of care and custody
  # Make sure we don't leave any computed values empty
  # we have some that we need to set at end instead of in regular interview flow
  # because we ask them out of order
  trigger_page1_computed_values 
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both):
    if has_participated_custody_case or know_of_other_custody_case:
      trigger_aff_care_or_custody_computed_variables
  # Most others can be asked in-line

  docket_numbers[0]
  day # Triggers date question in format for aff. of care and custody
  
  nav.set_section('section_signature')
  preview_209a_package

  users[0].states_above_true
  signature_fields = ['users[0].signature']
  basic_questions_signature_flow
  users[0].signature
  
  final_attachment_bundle
  nav.set_section('section_filing')
  download_screen
---
if: |
  who_protecting_screener == "someone else"
question: |
  What is the name of the person who needs the order?
fields:
  - First Name: users[0].name.first
  - Middle Name: users[0].name.middle
    required: False
  - Last Name: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: explain first person questions
question: |
  You are helping ${users.familiar()} fill out this form
subquestion: |
  Answer the rest of the questions as if you are ${users.familiar()}. 
  
  Some answers need to be in ${users.familiar()}'s own words.
field: tell_user_about_first_person_questions  
---
id: preview form
question: |
  Preview your document
subquestion: |
  Your document is almost ready to sign. Before you sign it,
  click on the preview image below to view it in a new window.

  Don't forget to come back to this screen to sign and download
  your final form.

  ${pdf_concatenate(final_attachment_preview)}

  Click ${word("Next")} when you are ready to sign.
field: preview_209a_package
---
id: download
question: |
  Download screen
subquestion: |
  ${pdf_concatenate(final_attachment_bundle)}
event: download_screen  
---
comment: |
  Build some variables dynamically
---
code: |
  # There are never 2 defendants or two plaintiffs
  users.there_is_another = False
  plaintiffs=users
  other_parties.there_is_another = False
  defendant = other_parties # We need this for Affidavit interview currently
  defendants = other_parties
  user_role = "plaintiff"
  confidential_address = True
  docket_numbers[0] = '' # we never know docket number in advance
  docket_numbers.auto_gather=False
  docket_numbers.gathered=True
  needs_attorney_signature = False
  allowed_courts = [
      'Boston Municipal Court',
      'District Court',
      'Probate and Family Court',
      'Superior Court',
    ]
  preferred_court = ''
  set_interview_defaults = True
---
code: |
  # Set no_abuse_checked via the 209A Affidavit questions
  no_abuse_checked = (not defendant_abuse_caused_fear_of_serious_physical_harm 
    and not defendant_abuse_attempted_physical_harm
    and not defendant_abuse_caused_physical_harm
    and not defendant_abuse_caused_sexual_assault_force
    and not defendant_abuse_caused_sexual_assault_make)
---
id: affirmation
question: |
  Signing Under Oath
subquestion: |
  Your form must be signed "under penalties of perjury."
  This means that it can be a crime if you lie on this form.
fields:
  - no label: users[0].states_above_true
    datatype: checkboxes
    minlength: 1
    choices:
      - I promise that my answers on this form are the truth under penalties of perjury
    validation messages:
      minlength: |
        You cannot keep going unless you agree that you will tell the truth.
---
reconsider: True
code: |
  attachment_temp = []  
  # Build the 209A package. Up to 8 total forms
  # Page 1: complaint_209A_labeled_page10003_attachment
  #     page1_addendum
  # Complaint Affidavit: complaint_209A_Affidavit_attachment
  #     affidavit_addendum, triggered by addAddendum_affidavit
  # Page 2: A_complaint_for_protection_from_abuse_probation_copy0005_attachment
  #     page2_addendum, triggered by addAddendum_page2
  # Child support: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment
  # Affidavit care/custody: A_affidavit_disclosing_care_or_custody_proceedings0009_attachment 
  #     care_or_custody_proceedings_appendix_variable, triggered by need_care_custody_addendum
  # Plaintiff info: A_Plaintiff_Confidential_Information0011_attachment
  #     confidential_info_addendum
  # Defendant info: defendantinformation209A0008_attachment
  #    defendant_addendum
  # motion to impound: a_258e_motion_for_impoundment0019_attachment
  #    impound_addendum
  
  # Always include page 1 
  attachment_temp.append(complaint_209A_labeled_page10003_attachment)
  if need_page1_addendum:
    attachment_temp.append(page1_addendum)
  attachment_temp.append( complaint_209A_Affidavit_attachment )
  if addAddendum_affidavit:
    attachment_temp.append(affidavit_addendum)
  # include page 2 only if there are children
  if plaintiff_has_minor_children: 
    attachment_temp.append( A_complaint_for_protection_from_abuse_probation_copy0005_attachment )
    if addAddendum_page2:
      attachment_temp.append(page2_addendum)
    if defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and have_had_custody_cases :
      attachment_temp.append(A_affidavit_disclosing_care_or_custody_proceedings0009_attachment)
      if need_care_custody_addendum:
        attachment_temp.append(care_or_custody_proceedings_appendix_variable)
    
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and wants_child_support_yes and not existing_order:
    attachment_temp.append( Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment)
    if addAddendum_chdSupport:
      attachment_temp.append(chdSupport_addendum)
  attachment_temp.append(A_Plaintiff_Confidential_Information0011_attachment)
  if addAddendum_confidential:
    attachment_temp.append(confidential_info_addendum)
  attachment_temp.append(defendantinformation209A0008_attachment)
  if addAddendum_defendant:
    attachment_temp.append(defendant_addendum)
  if asked_for_impoundment:
    attachment_temp.append(a_258e_motion_for_impoundment0019_attachment)
    if addAddendum_impound:
      attachment_temp.append(impound_addendum)  
  final_attachment_bundle = attachment_temp
---
reconsider: True
code: |
  # PREVIEW version of the attachment
  attachment_preview_temp = []  
  # Always include page 1 
  attachment_preview_temp.append(complaint_209A_labeled_page10003_attachment_preview)
  if need_page1_addendum:
    attachment_preview_temp.append(page1_addendum)
  attachment_preview_temp.append( complaint_209A_Affidavit_attachment_preview )
  if addAddendum_affidavit:
    attachment_preview_temp.append(affidavit_addendum)
  # include page 2 only if there are children
  if plaintiff_has_minor_children: 
    attachment_preview_temp.append( A_complaint_for_protection_from_abuse_probation_copy0005_attachment_preview )
    if addAddendum_page2:
      attachment_preview_temp.append(page2_addendum)
    if defendant_and_plaintiff_are_parents_of_child and len(children_of_both) and have_had_custody_cases:
      attachment_preview_temp.append(A_affidavit_disclosing_care_or_custody_proceedings0009_attachment_preview)
      if need_care_custody_addendum:
        attachment_preview_temp.append(care_or_custody_proceedings_appendix_variable)
    
  if plaintiff_has_minor_children and defendant_and_plaintiff_are_parents_of_child and wants_child_support_yes and not existing_order:
    attachment_preview_temp.append( Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment_preview)
    if addAddendum_chdSupport:
      attachment_preview_temp.append(chdSupport_addendum)
  attachment_preview_temp.append(A_Plaintiff_Confidential_Information0011_attachment_preview)
  if addAddendum_confidential:
    attachment_preview_temp.append(confidential_info_addendum)
  attachment_preview_temp.append(defendantinformation209A0008_attachment_preview)
  if addAddendum_defendant:
    attachment_preview_temp.append(defendant_addendum)
  if asked_for_impoundment:
    attachment_preview_temp.append(a_258e_motion_for_impoundment0019_attachment_preview)
    if addAddendum_impound:
      attachment_preview_temp.append(impound_addendum)  
  final_attachment_preview = attachment_preview_temp
  
---
sets:
  - courts[0]
id: choose a court
question: |
  What court will you file in?
subquestion: |
  % if len(all_matches) > 0:
  Below is a map of the ${comma_and_list(allowed_courts)} court(s) that serve the
  address you gave us, ${users[0].address.on_one_line()}.
  
  % if len(users[0].previous_addresses):
  We also list courts that serve ${users[0].previous_addresses}.
  % endif
  
  ${map_of(combined_locations(all_matches))}
  % endif
  
  Choose the court that offers:
  
  1. The help that you need.
  2. Is in a location you can get to.
  
  Click "How do I choose a court?" to learn more.
  
  Note: during the Covid-19 emergency, your hearing may happen over the
  phone and not in person.
fields:
  - no label: courts[0]
    datatype: object_radio
    choices: all_matches
    none of the above: True
    disable others: True
    object labeler: |
      lambda y: '**' + str(y) +' (' + y.address.city + ')**' + '[BR]' + y.address.on_one_line() + '[BR]' + y.description
  - note: |
      Does the list above look wrong? If you think you should file in a
      court we didn't list, choose from the full list below.
    show if: 
      code: |
        len(all_matches)
  - no label: courts[0]
    datatype: object
    object labeler: |
      lambda y: (str(y) +' (' + y.address.city + ')') if y.address.city not in str(y) else str(y)
    choices: macourts    
help:
  label: |
    How do I choose a court?
  content: |
    You can get a 209A restraining order at the District Court near where you live or the Probate and Family Court in your county.  If you live in Boston, you can go to the Boston Municipal Court (BMC) near where you live instead of a District Court. You can also go to the Superior Court in your county.  Most people get 209A restraining orders from District Court, BMC, or Probate and Family Court.  Superior Court restraining orders are rare but may be an option when other available courts are closed due to the COVID-19 crisis. 
  
    If you have moved to another town in Massachusetts since the abuse, you can go to the court where you live now or to the court for an address that you had to leave because of the abuse. 
  
    Some things to think about when you are deciding which court is better for you are:  
  
    #### If the other parent wants to visit your child  
    The District Court is not supposed to order visitation between the other parent and your child as part of a 209A case. The Probate and Family Court can order visitation in a 209A case.  If you want to get visitation settled right away, you might want to go to the Probate and Family Court to file for the 209A restraining order. If you do not want the court to decide about visitation, you might want to go to the District Court for your 209A restraining order. 
    #### If the person who abused you is facing criminal charges  
    If the person who abused you is facing criminal charges related to the domestic violence, you might want to file for your 209A restraining order at the District or Superior Court where that case is. That way, you may be able to work with the same Victim/Witness Advocate for both cases.
  
    Read more at: [https://www.masslegalhelp.org/domestic-violence/where-can-i-get-209a](https://www.masslegalhelp.org/domestic-violence/where-can-i-get-209a)
  