mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['Generic_Motion_Family_Law_ready_for_upload0004']"):
    interview_metadata.initializeObject('Generic_Motion_Family_Law_ready_for_upload0004')
  interview_metadata['Generic_Motion_Family_Law_ready_for_upload0004'].update({
    'title': 'Generic Motion Family Law',
    'short title': 'Generic Motion Family Law',
    'description': 'Can be used for temporary orders motion and other motions. Should always be grouped with affidavit and proposed order; sometimes with financial statement, child support guidelines, and DOR application.',
    'original_form': 'https://www.mass.gov/doc/motion-for-temporary-orders-cjd-400/download',
    'allowed courts': [
      'Probate and Family Court',
    ],
    'preferred court': 'Probate and Family Court',
    'categories': [
      'Family Law',
    ],
    'logic block variable': 'Generic_Motion_Family_Law_ready_for_upload0004',
    'attachment block variable': 'Generic_Motion_Family_Law_ready_for_upload0004_attachment',
    'typical role': 'unknown',
    'built_in_fields_used': [
      {'variable': 'docket_number',
       'transformed_variable': 'docket_numbers[0]',
      },
      {'variable': 'plaintiff',
       'transformed_variable': 'str(plaintiffs[0])',
      },
      {'variable': 'defendant',
       'transformed_variable': 'str(defendants[0])',
      },
      {'variable': 'user',
       'transformed_variable': 'str(users[0])',
      },
      {'variable': 'user_signature',
       'transformed_variable': 'users[0].signature',
      },
      {'variable': 'user_name',
       'transformed_variable': 'str(users[0])',
      },
      {'variable': 'user_address_street',
       'transformed_variable': 'users[0].address.address',
      },
      {'variable': 'user_address_city',
       'transformed_variable': 'users[0].address.city',
      },
      {'variable': 'user_address_state',
       'transformed_variable': 'users[0].address.state',
      },
      {'variable': 'user_address_zip',
       'transformed_variable': 'users[0].address.zip',
      },
      {'variable': 'user_phone',
       'transformed_variable': 'users[0].phone_number',
      },
      {'variable': 'court_name',
       'transformed_variable': 'str(courts[0])',
      },
      {'variable': 'docket_number__2',
       'transformed_variable': 'docket_numbers[0]',
      },
      {'variable': 'other_party_name',
       'transformed_variable': 'str(other_parties[0])',
      },
      {'variable': 'other_party_address_street',
       'transformed_variable': 'other_parties[0].address.address',
      },
      {'variable': 'other_party_address_city',
       'transformed_variable': 'other_parties[0].address.city',
      },
      {'variable': 'other_party_address_state',
       'transformed_variable': 'other_parties[0].address.state',
      },
      {'variable': 'other_party_address_zip',
       'transformed_variable': 'other_parties[0].address.zip',
      },
      {'variable': 'user_signature__2',
       'transformed_variable': 'users[0].signature',
      },
      ],
    'fields': [
      {'variable': 'court_division',
       'transformed_variable': 'courts[0].division',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'motion_name',
       'transformed_variable': 'motion_name',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'user_is_plaintiff',
       'transformed_variable': 'users[0].is_plaintiff',
      'field_type': 'yesno',
      },
      {'variable': 'user_is_defendant',
       'transformed_variable': 'users[0].is_defendant',
      'field_type': 'yesno',
      },
      {'variable': 'user_is_petitioner',
       'transformed_variable': 'users[0].is_petitioner',
      'field_type': 'yesno',
      },
      {'variable': 'user_is_respondent',
       'transformed_variable': 'users[0].is_respondent',
      'field_type': 'yesno',
      },
      {'variable': 'user_requests',
       'transformed_variable': 'users[0].requests',
      'field_type': 'area',
      'field_data_type': 'text',
      },
      {'variable': 'motion_date',
       'transformed_variable': 'motion_date',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      {'variable': 'city',
       'transformed_variable': 'city',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'hearing_date_month_day_year',
       'transformed_variable': 'hearing_date_month_day_year',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      {'variable': 'hearing_time',
       'transformed_variable': 'hearing_time',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'user_bbo_number',
       'transformed_variable': 'users[0].bbo_number',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'motion_allowed',
       'transformed_variable': 'motion_allowed',
      'field_type': 'yesno',
      },
      {'variable': 'motion_denied',
       'transformed_variable': 'motion_denied',
      'field_type': 'yesno',
      },
      {'variable': 'denied_reason_1',
       'transformed_variable': 'denied_reason_1',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'denied_reason_2',
       'transformed_variable': 'denied_reason_2',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'denied_reason_3',
       'transformed_variable': 'denied_reason_3',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'motion_granted_denied_date',
       'transformed_variable': 'motion_granted_denied_date',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      {'variable': 'court_division__2',
       'transformed_variable': 'courts[0].division',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'motion_name__2',
       'transformed_variable': 'motion_name',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'motion_date__2',
       'transformed_variable': 'motion_date',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      {'variable': 'service_was_in_hand',
       'transformed_variable': 'service_was_in_hand',
      'field_type': 'yesno',
      },
      {'variable': 'service_was_in_am',
       'transformed_variable': 'service_was_in_am',
      'field_type': 'yesno',
      },
      {'variable': 'service_was_in_pm',
       'transformed_variable': 'service_was_in_pm',
      'field_type': 'yesno',
      },
      {'variable': 'service_date',
       'transformed_variable': 'service_date',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      {'variable': 'service_time',
       'transformed_variable': 'service_time',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'service_was_by_mail',
       'transformed_variable': 'service_was_by_mail',
      'field_type': 'yesno',
      },
      {'variable': 'mail_date',
       'transformed_variable': 'mail_date',
      'field_type': 'text',
      'field_data_type': 'date',
      },
      ],
  })
---
question: |
  Generic Motion Family Law
subquestion: |
  #### Information about the motion.
fields:
  - Division: courts[0].division
  - 'Motion For': motion_name
  - 'Motion requested': users[0].requests
    input type: area
  - 'Date': motion_date
    datatype: date
---
question: |
  Generic Motion Family Law
subquestion: |
  #### Representation
fields:
  - Are you representing yourself?: MJFself_represented
    datatype: yesnoradio
  - 'Attorney BBO Number': users[0].bbo_number
    show if:
      variable: MJFself_represented
      is: False
---
# Define BBO number if self represented
code: |
  if MJFself_represented:
    users[0].bbo_number = 'N/A'
---
question: |
  Generic Motion Family Law
subquestion: |
  #### Location, date and time of hearing
fields:
  - 'City in which motion is to be heard': city
  - 'Hearing date': hearing_date_month_day_year
    datatype: date
  - 'Hearing time': MJFraw_hearing_time
    datatype: time
---
# Format hearing time
code: |
  hearing_time = format_time(MJFraw_hearing_time, format='h:mm a')
---
# If user_ask_role is 'plaintiff', ask if plaintiff or petitioner, likewise
# for defendant/respondent.  Only one of these two questions will ever
# be displayed.
question: |
  Party Role
fields:
  - Indicate if you are the Plaintiff or Petitioner: MJFuser_role
    datatype: radio
    choices:
      - Plaintiff: plaintiff
      - Petitioner: petitioner
    show if:
      code: |
        user_ask_role == 'plaintiff'
  - Indicate if you are the Defendant or Respondent: MJFuser_role
    datatype: radio
    choices:
      - Defendant: defendant
      - Respondent: respondent
    show if:
      code: |
        user_ask_role == 'defendant'
---
question: |
  Certificate of Service
subquestion: |
  Complete this form to generate a Certificate of Service for this Motion for **${motion_name}** on date **${motion_date}**
fields:
  - Document was served: MJFservice_type
    datatype: radio
    choices:
      - by hand
      - by post
  - Date of delivery:  service_date
    datatype: date
    show if:
      variable: MJFservice_type
      is: 'by hand'
  - Time of delivery:  MJFraw_time
    datatype: time
    show if:
      variable: MJFservice_type
      is: 'by hand'
  - Date postage paid: mail_date
    datatype: date
    show if:
      variable: MJFservice_type
      is: 'by post'
---
# If service is by post, populate service by hand date variable and vice versa
code: |
  if MJFservice_type == 'by hand':
    # Populate post variables
    mail_date = ''
  else:
    service_date = ''
---
# Format raw time into text to display in pdf field
code: |
  if MJFservice_type == 'by hand':
    service_time = format_time(MJFraw_time, format='h:mm')
  else:
    service_time = ''
---
# Calculate service_was_in_am from service_time which is now a time type
code: |
  if MJFservice_type == 'by hand':
    if format_time(service_time, format='a') == 'AM':
      service_was_in_am = True
      service_was_in_pm = False
    else:
      service_was_in_am = False
      service_was_in_pm = True
  else:
    # If we're here service is by post
    service_was_in_am = False
    service_was_in_pm = False
---      
progress: 100
mandatory: True
question: |
  Download your form
subquestion: |
  Please download a PDF version of your form using the **PDF** link
  at the bottom of this screen
  
  ### Next steps
  
  1. Step 1
  1. Step 2
  
  Below is a preview of your form.
  
  ${Generic_Motion_Family_Law_ready_for_upload0004_attachment }
attachment code: Generic_Motion_Family_Law_ready_for_upload0004_attachment
---
need: Generic_Motion_Family_Law_ready_for_upload0004
attachment:
    variable name: Generic_Motion_Family_Law_ready_for_upload0004_attachment
    name: Generic Motion Family Law
    filename: Generic_Motion_Family_Law
    pdf template file: Generic_Motion_Family_Law_ready_for_upload.pdf
    fields: 
      - "docket_number": ${ docket_numbers[0] }
      - "plaintiff": ${ str(plaintiffs[0]) }
      - "defendant": ${ str(defendants[0]) }
      - "user": ${ str(users[0]) }
      - "user_signature": ${ users[0].signature }
      - "user_name": ${ str(users[0]) }
      - "user_address_street": ${ users[0].address.address }
      - "user_address_city": ${ users[0].address.city }
      - "user_address_state": ${ users[0].address.state }
      - "user_address_zip": ${ users[0].address.zip }
      - "user_phone": ${ users[0].phone_number }
      - "court_name": ${ str(courts[0]) }
      - "docket_number__2": ${ docket_numbers[0] }
      - "other_party_name": ${ str(other_parties[0]) }
      - "other_party_address_street": ${ other_parties[0].address.address }
      - "other_party_address_city": ${ other_parties[0].address.city }
      - "other_party_address_state": ${ other_parties[0].address.state }
      - "other_party_address_zip": ${ other_parties[0].address.zip }
      - "user_signature__2": ${ users[0].signature }
      - "court_division": ${ courts[0].division }
      - "motion_name": ${ motion_name }
      - "user_is_plaintiff": ${ MJFuser_role == 'plaintiff' }
      - "user_is_defendant": ${ MJFuser_role == 'defendant' }
      - "user_is_petitioner": ${ MJFuser_role == 'petitioner' }
      - "user_is_respondent": ${ MJFuser_role == 'respondent' }
      - "user_requests": ${ users[0].requests }
      - "motion_date": ${ motion_date }
      - "city": ${ city }
      - "hearing_date_month_day_year": ${ hearing_date_month_day_year }
      - "hearing_time": ${ hearing_time }
      - "user_bbo_number": ${ users[0].bbo_number }
      - "motion_allowed": ''
      - "motion_denied": ''
      - "denied_reason_1": ''
      - "denied_reason_2": ''
      - "denied_reason_3": ''
      - "motion_granted_denied_date": ''
      - "court_division__2": ${ courts[0].division }
      - "motion_name__2": ${ motion_name }
      - "motion_date__2": ${ motion_date }
      - "service_was_in_hand": ${ MJFservice_type == 'by hand' }
      - "service_was_in_am": ${ service_was_in_am }
      - "service_was_in_pm": ${ service_was_in_pm }
      - "service_date": ${ service_date }
      - "service_time": ${ service_time }
      - "service_was_by_mail": ${ MJFservice_type == 'by post' }
      - "mail_date": ${ mail_date }
---
include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
comment: |
  This question is used to introduce your interview. Please customize
continue button field: Generic_Motion_Family_Law_ready_for_upload0004_intro
question: |
  Generic Motion Family Law
subquestion: |
  Can be used for temporary orders motion and other motions. Should always be grouped with affidavit and proposed order; sometimes with financial statement, child support guidelines, and DOR application.
---
id: interview_order_Generic_Motion_Family_Law_ready_for_upload0004
code: |
  # This is a placeholder to control logic flow in this interview
  # It was generated from interview_generator.py as an 'interview order' type question.  basic_questions_intro_screen 
  Generic_Motion_Family_Law_ready_for_upload0004_intro
  # Set the preferred/allowed courts for this interview
  preferred_court = interview_metadata["Generic_Motion_Family_Law_ready_for_upload0004"]["preferred court"]
  allowed_courts = interview_metadata["Generic_Motion_Family_Law_ready_for_upload0004"]["allowed courts"]
  MJFuser_role
  motion_name
  city
  users[0].bbo_number
  courts[0].division
  docket_numbers[0]
  str(plaintiffs[0])
  str(defendants[0])
  str(users[0])
  str(users[0])
  users[0].address.address
  users[0].address.city
  users[0].address.state
  users[0].address.zip
  users[0].phone_number
  str(courts[0])
  docket_numbers[0]
  str(other_parties[0])
  other_parties[0].address.address
  other_parties[0].address.city
  other_parties[0].address.state
  other_parties[0].address.zip
  service_time
  service_was_in_am
  service_was_in_pm
  hearing_time
  # By default, we'll mark any un-filled fields as DAEmpty(). This helps avoid errors if you intentionally hide a logic branch or mark a question not required
  # Comment out the line below if you don't want this behavior. 
  mark_unfilled_fields_empty(interview_metadata["Generic_Motion_Family_Law_ready_for_upload0004"])
  Generic_Motion_Family_Law_ready_for_upload0004_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  Generic_Motion_Family_Law_ready_for_upload0004 = True
---
continue button field: Generic_Motion_Family_Law_ready_for_upload0004_preview_question
question: |
  Placeholder preview screen
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${Generic_Motion_Family_Law_ready_for_upload0004_attachment_preview}
---
attachment:
    variable name: Generic_Motion_Family_Law_ready_for_upload0004_attachment_preview
    name: Generic Motion Family Law
    filename: Generic_Motion_Family_Law
    pdf template file: Generic_Motion_Family_Law_ready_for_upload.pdf
    fields: 
      - "docket_number": ${ docket_numbers[0] }
      - "plaintiff": ${ str(plaintiffs[0]) }
      - "defendant": ${ str(defendants[0]) }
      - "user": ${ str(users[0]) }
      - "user_signature": ''
      - "user_name": ${ str(users[0]) }
      - "user_address_street": ${ users[0].address.address }
      - "user_address_city": ${ users[0].address.city }
      - "user_address_state": ${ users[0].address.state }
      - "user_address_zip": ${ users[0].address.zip }
      - "user_phone": ${ users[0].phone_number }
      - "court_name": ${ str(courts[0]) }
      - "docket_number__2": ${ docket_numbers[0] }
      - "other_party_name": ${ str(other_parties[0]) }
      - "other_party_address_street": ${ other_parties[0].address.address }
      - "other_party_address_city": ${ other_parties[0].address.city }
      - "other_party_address_state": ${ other_parties[0].address.state }
      - "other_party_address_zip": ${ other_parties[0].address.zip }
      - "user_signature__2": ''
      - "court_division": ${ courts[0].division }
      - "motion_name": ${ motion_name }
      - "user_is_plaintiff": ${ MJFuser_role == 'plaintiff' }
      - "user_is_defendant": ${ MJFuser_role == 'defendant' }
      - "user_is_petitioner": ${ MJFuser_role == 'petitioner' }
      - "user_is_respondent": ${ MJFuser_role == 'respondent' }
      - "user_requests": ${ users[0].requests }
      - "motion_date": ${ motion_date }
      - "city": ${ city }
      - "hearing_date_month_day_year": ${ hearing_date_month_day_year }
      - "hearing_time": ${ hearing_time }
      - "user_bbo_number": ${ users[0].bbo_number }
      - "motion_allowed": ''
      - "motion_denied": ''
      - "denied_reason_1": ''
      - "denied_reason_2": ''
      - "denied_reason_3": ''
      - "motion_granted_denied_date": ''
      - "court_division__2": ${ courts[0].division }
      - "motion_name__2": ${ motion_name }
      - "motion_date__2": ${ motion_date }
      - "service_was_in_hand": ${ MJFservice_type == 'by hand' }
      - "service_was_in_am": ${ service_was_in_am }
      - "service_was_in_pm": ${ service_was_in_pm }
      - "service_date": ${ service_date }
      - "service_time": ${ service_time }
      - "service_was_by_mail": ${ MJFservice_type == 'by post' }
      - "mail_date": ${ mail_date }
