include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['A_complaint_for_protection_from_abuse_probation_copy0005']"):
    interview_metadata.initializeObject('A_complaint_for_protection_from_abuse_probation_copy0005')
  interview_metadata['A_complaint_for_protection_from_abuse_probation_copy0005'].update({
    'title': '209A Complaint for Protection from Abuse pg 2',
    'short title': '209A Page 2',
    'description': 'Complete this form if you are applying for 209A restraining order and you have children under  18.',
    'original_form': 'https://www.mass.gov/doc/complaint-for-protection-from-abuse-gl-c-209a-page-2/download',
    'allowed courts': [
      'Boston Municipal Court',
      'District Court',
      'Probate and Family Court',
      'Superior Court',
    ],
    'preferred court': 'District Court',
    'categories': [
      'Domestic Violence / Safety of self',
      'Family Law',
    ],
    'logic block variable': 'A_complaint_for_protection_from_abuse_probation_copy0005',
    'attachment block variable': 'A_complaint_for_protection_from_abuse_probation_copy0005_attachment',
    'typical role': 'plaintiff',  })
---
variable name: interview_metadata['A_complaint_for_protection_from_abuse_probation_copy0005']['built_in_fields_used']
data:
  - variable: child1_name_full
  - variable: child1_age
  - variable: child2_name_full
  - variable: child2_age
  - variable: child3_name_full
  - variable: child3_age
  - variable: child4_name_full
  - variable: child4_age
  - variable: child5_name_full
  - variable: child5_age
  - variable: child6_name_full
  - variable: child6_age
  - variable: user_signature
---
variable name: interview_metadata['A_complaint_for_protection_from_abuse_probation_copy0005']['field_list']
data:
  - variable: custody_case_yes
    field_type: yesno
  - variable: custody_case_no
    field_type: yesno
  - variable: paternity_case_no
    field_type: yesno
  - variable: paternity_case_yes
    field_type: yesno
  - variable: request_custody_yes
    field_type: yesno
  - variable: child1_name_full__4
    field_type: text
    field_data_type: text
  - variable: child1_age__4
    field_type: text
    field_data_type: number
  - variable: child2_name_full__4
    field_type: text
    field_data_type: text
  - variable: child2_age__4
    field_type: text
    field_data_type: number
  - variable: child3_name_full__4
    field_type: text
    field_data_type: text
  - variable: child3_age__4
    field_type: text
    field_data_type: number
  - variable: child4_name_full__4
    field_type: text
    field_data_type: text
  - variable: child4_age__4
    field_type: text
    field_data_type: number
  - variable: child5_name_full__4
    field_type: text
    field_data_type: text
  - variable: child5_age__4
    field_type: text
    field_data_type: number
  - variable: child6_name_full__4
    field_type: text
    field_data_type: text
  - variable: child6_age__4
    field_type: text
    field_data_type: number
  - variable: reasons_for_no_contact
    field_type: area
    field_data_type: text
  - variable: order_defendant_remain_away_from_schools_daycares_yes
    field_type: yesno
  - variable: school_name_address_daycare_name_address
    field_type: text
    field_data_type: text
  - variable: visitation_yes
    field_type: yesno
  - variable: visitation_no
    field_type: yesno
  - variable: visitation_at_location
    field_type: yesno
  - variable: visitation_center_name
    field_type: text
    field_data_type: text
  - variable: visitation_payer_name_full
    field_type: text
    field_data_type: text
  - variable: visitation_supervised
    field_type: yesno
  - variable: visitation_supervisor_name_full
    field_type: text
    field_data_type: text
  - variable: visitation_times
    field_type: text
    field_data_type: text
  - variable: visitation_payer2_name_full
    field_type: text
    field_data_type: text
  - variable: visitation_third_party_involvement
    field_type: yesno
  - variable: visitation_third_party_name_full
    field_type: text
    field_data_type: text
  - variable: visitation_other
    field_type: yesno
  - variable: visitation_other_requests
    field_type: text
    field_data_type: text
  - variable: request_child_support_temporary_yes
    field_type: yesno
  - variable: user_signature_date
    field_type: text
    field_data_type: date
---
reconsider: True
code: |
  children_of_both = children.filter(defendant_is_parent = True)
  children_of_both.gathered = True
  build_children_of_both_list  = True
---
id: A_complaint_for_protection_from_abuse_probation_copy0005
scan for variables: False
sets: A_complaint_for_protection_from_abuse_probation_copy0005
code: |
  #######
  # Implementation of https://docs.google.com/document/d/1o-7280WLN8U64ofjxb5m6JFycKvpmnGryvVmflmZv2I/edit?pli=1
  #######

  # TODO:
  # Add ways to attach addenda for:
  # 1. Children want custody of table
  # 1. Children want no contact order for table
  # 1. Reasons want no contact paragraph
  # 1. School names/address paragraph
  # check text vertical alignment of pdf fields
  # TODOs in rest of the document

  interview_id = "A_complaint_for_protection_from_abuse_probation_copy0005"

  # basic_questions_intro_screen 
  # A_complaint_for_protection_from_abuse_probation_copy0005_intro  # Need a way to skip intro to every form?

  #######
  # Custom logic start
  #######

  # Placeholder for now
  # defendant_and_plaintiff_are_parents_of_child = True

  # TODO: snippet contender
  # if not plaintiff_has_children_parent_of:
  #  children.target_number = 0
  # if not plaintiff_has_children_cares_for:
  #  children_cares_for.target_number = 0
  # children.target_number
  # children_cares_for.target_number

  children.gather()  # .name.first completes the person
  for child in children:
    child.plaintiff_is_parent = True

  children_cares_for.gather()  # .name.first completes the person
  for child in children_cares_for:
    child.plaintiff_is_parent = False

  for child in children + children_cares_for:
    if not defendant_and_plaintiff_are_parents_of_child:
      child.defendant_is_parent = False

  # Works in DA  
  # all_children = children + children_cares_for
  
  # Should ask for custody and other things if child of both
  build_children_of_both_list

  if len(children_of_both) > 0:
    wants_custody_of
    for custody_child in wants_custody_of:
      custody_child.seeking_custody = True

  wants_no_contact_for
  for contact_child in wants_no_contact_for:
    contact_child.seeking_no_contact = True

  if len(wants_no_contact_for) > 0:
    # Wat?! Can't just use reasons_for_no_contact!
    hack_reasons_for_no_contact = reasons_for_no_contact
  else:
    hack_reasons_for_no_contact = ''

  if schools_to_stay_away_from.there_are_any:
    schools_to_stay_away_from.minimum_number = 1
  schools_to_stay_away_from.gather()
  # schools_to_stay_away_from[0].name.text  # `Organization`s have `.name.text`

  actual_center_payer = ''
  actual_supervision_payer = ''

  # visitation_info
  if wants_visitation_orders:
    if not prohibit_visitation:
      wants_center  # Asks all the questions

      if defined('pays_for_center'):
        if pays_for_center == "other":
          actual_center_payer = other_pays_for_center
        else: actual_center_payer = pays_for_center

      if defined('supervision_payer'):
        if supervision_payer == "other":
          actual_supervision_payer = other_supervision_payer
        else: actual_supervision_payer = supervision_payer

    # ends if not prohibit_visitation
  # ends if wants_visitation_orders
  
  # Will allow visitation without restrictions perhaps?
  no_visitation_restrictions = not wants_visitation_orders
  if existing_order:
    explain_no_child_support
    wants_child_support_yes = False
    majors_needing_support.there_are_any = False
  else:
    child_support_safety
    wants_child_support_yes
    if need_help_for_majors:
      majors_needing_support[0].name.first

  # REMOVED in stitchup -- ask these later
  # have_had_custody_cases
  # have_had_paternity_cases

  # I think other interviews will be using this var name
  # children = all_children
  
  normalize_vars_for_attachment # MB's code to set variables empty

  #########
  # End custom logic basically
  #########
  # user_signature_date = signature_date
  # # Pre-canned preview screen
  # A_complaint_for_protection_from_abuse_probation_copy0005_preview_question
  # basic_questions_signature_flow
  # users[0].signature

  A_complaint_for_protection_from_abuse_probation_copy0005 = True
---
id: ensure_attachment_values
code: |

  # NOTE: showifdef() is a DA form-filling function
  
  # Vars these attachments need
  # children = all_children

  # How to do this len with possibly 0?
  requests_custody_yes = len(wants_custody_of.elements) > 0
  wants_custody_of1_name_full = str(wants_custody_of.item(1 - 1))
  wants_custody_of1_age = wants_custody_of.item(1 - 1).age_in_years()
  wants_custody_of2_name_full = str(wants_custody_of.item(2 - 1))
  wants_custody_of2_age = wants_custody_of.item(2 - 1).age_in_years()
  wants_custody_of3_name_full = str(wants_custody_of.item(3 - 1))
  wants_custody_of3_age = wants_custody_of.item(3 - 1).age_in_years()
  wants_custody_of4_name_full = str(wants_custody_of.item(4 - 1))
  wants_custody_of4_age = wants_custody_of.item(4 - 1).age_in_years()
  wants_custody_of5_name_full = str(wants_custody_of.item(5 - 1))
  wants_custody_of5_age = wants_custody_of.item(5 - 1).age_in_years()
  wants_custody_of6_name_full = str(wants_custody_of.item(6 - 1))
  wants_custody_of6_age = wants_custody_of.item(6 - 1).age_in_years()
  
  wants_no_contact_for1_name_full = str(wants_no_contact_for.item(1-1))
  wants_no_contact_for1_age = wants_no_contact_for.item(1-1).age_in_years()
  wants_no_contact_for2_name_full = str(wants_no_contact_for.item(2-1))
  wants_no_contact_for2_age = wants_no_contact_for.item(2-1).age_in_years()
  wants_no_contact_for3_name_full = str(wants_no_contact_for.item(3-1))
  wants_no_contact_for3_age = wants_no_contact_for.item(3-1).age_in_years()
  wants_no_contact_for4_name_full = str(wants_no_contact_for.item(4-1))
  wants_no_contact_for4_age = wants_no_contact_for.item(4-1).age_in_years()
  wants_no_contact_for5_name_full = str(wants_no_contact_for.item(5-1))
  wants_no_contact_for5_age = wants_no_contact_for.item(5-1).age_in_years()
  wants_no_contact_for6_name_full = str(wants_no_contact_for.item(6-1))
  wants_no_contact_for6_age = wants_no_contact_for.item(6-1).age_in_years()

  hack_reasons_for_no_contact = showifdef('hack_reasons_for_no_contact', '')
  reasons_no_contact = reasons_for_no_contact_cutoff

  keep_away_from_schools_daycares = schools_to_stay_away_from.there_are_any
  # TODO: Does this need special DA treatment
  school_strings = []
  for school in schools_to_stay_away_from:
    school_strings.append( str(school) + ' ' + school.address.on_one_line(include_unit=True) )
  schools_to_stay_away_from_pdf = comma_and_list( school_strings )

  permit_visitation_yes = no_visitation_restrictions
  prohibit_visitation_pdf = showifdef('prohibit_visitation', False)
  prohibit_visitation_yes = prohibit_visitation_pdf
  
  wants_center_pdf = showifdef('wants_center', False)
  wants_visitation_center_yes = wants_center_pdf
  visitation_center_name_pdf = showifdef('visitation_center_name', '')
  visitation_center_name = visitation_center_name_pdf
  actual_center_payer_pdf = showifdef('actual_center_payer', '')
  visitation_center_payor_name = actual_center_payer_pdf

  wants_supervision_pdf = showifdef('wants_supervision', False)
  wants_supervision_yes = wants_supervision_pdf
  supervisor_name_pdf = showifdef('visitation_supervisor_name_full', '')
  visitation_supervisor_name = supervisor_name_pdf
  supervision_time_pdf = showifdef('supervision_time', '')
  visitation_times = supervision_time_pdf
  actual_supervision_payer_pdf = showifdef('actual_supervision_payer', '')
  visitation_supervision_payor_name = actual_supervision_payer_pdf

  wants_pickup_pdf = showifdef('wants_pickup', False)
  wants_third_party_yes = wants_pickup_pdf
  who_picks_up_pdf = showifdef('who_picks_up', '')
  third_party_name = who_picks_up_pdf

  wants_other_order_pdf = showifdef('wants_other_order', False)
  wants_other_order_yes = wants_other_order_pdf
  other_order_pdf = showifdef('other_order', '')
  other_order_discription = other_order_pdf

  # wants_child_support_yes = len(wants_child_support_for) > 0
  
  # Vars other interviews need
  # majors_needing_support  # is list

  # Placeholders (to be answered in a previous interview).
  # TODO: remove when stitching
  # have_had_custody_cases_yes = have_had_custody_cases
  # have_had_custody_cases_no = not have_had_custody_cases
  # have_had_paternity_cases_yes = have_had_paternity_cases
  # have_had_paternity_cases_no = not have_had_paternity_cases
  # Important in question display logic in this form
  # defendant_and_plaintiff_are_parents_of_child = True

  normalize_vars_for_attachment = True
---
id: custom_objects
objects:
  - children: PeopleList.using(ask_number=True)
  - children_cares_for: PeopleList.using(ask_number=True)
  - children_of_both: PeopleList.using(auto_gather=False)
  - wants_custody_of: PeopleList
  - wants_no_contact_for: PeopleList
  - schools_to_stay_away_from: DAList.using(object_type=Person)
  - majors_needing_support: PeopleList
---
comment: |
  This screen is used to introduce your interview. Please customize.
continue button field: A_complaint_for_protection_from_abuse_probation_copy0005_intro
question: |
  Protecting your Children
subquestion: |
  [PLACEHOLDER]

  TODO: SME consult because of previous quesiton added: Complete this form if you are applying for 209A restraining order and you have children under 18.
---
# Placeholder for complaint page 1's questions
id: number_of_own_children_under_18
question: |
  The court needs to know if you have any children under 18
subquestion: |
  This includes
  
  % if defendant_and_plaintiff_are_parents_of_child:
  * children you have with ${other_parties.familiar()} who are under 18, as well as
  * 
  % endif  
  any of your children whose other parent is not ${other_parties.familiar()}.
 
fields:
  - Do you have any children under 18?: plaintiff_has_children_parent_of
    datatype: yesnoradio
  - How many of your children are under 18?: children.target_number
    datatype: integer
    min: 0
    show if: plaintiff_has_children_parent_of
validation code: |
  if not plaintiff_has_children_parent_of:
    children.target_number = 0
---
id: number_of_other_children_under_18
question: |
  Are you responsible for any 
  % if children.target_number > 0:
  other 
  % endif
  children under 18 who live with you?
subquestion: |
 If you are responsible for children under 18 who live with you but you are not their parent, the court needs to know about them also.

fields:
  - Are you responsible for someone else's child who lives with you and is under 18?: plaintiff_has_children_cares_for
    datatype: yesnoradio
  - How many?: children_cares_for.target_number
    datatype: integer
    min: 0
    show if: plaintiff_has_children_cares_for
validation code: |
  if not plaintiff_has_children_cares_for:
    children_cares_for.target_number = 0
---
# `ordinal()` says 'first', even if there's only one :(
id: children user is parent of
question: |
  Your children
subquestion: |  
  % if children.target_number == 1:
  Tell us about your child
  % else:
  % if i == 0:
  Tell us about your oldest child first.
  % else:
  You have already told us
  about ${comma_and_list(children.complete_elements())}. 

  Tell us about your ${ordinal(i)} child. 
  % endif
  % endif
     
  % if i == 0:
  % if children_cares_for.target_number == 1:
  The next question asks about the child in your home whom you care for, but is not your own child. For now, just name your own children.
  % else:
  % if children_cares_for.target_number > 1:
  The next question asks about the children in your home whom you care for, but are not your own children. For now, just name your own children.
  % endif
  % endif
  % endif
 
fields:
  - First Name: children[i].name.first
  - Middle Name: children[i].name.middle
    required: False
  - Last Name: children[i].name.last
  - Suffix: children[i].name.suffix
    required: False
  - Birthdate: children[i].birthdate
    datatype: date
    min: ${ today().minus(years=18) }
    validation messages:
      min: |
        The court asks only for children under 18.
  - Is ${other_parties.familiar()} this child's other parent?: children[i].defendant_is_parent
    datatype: yesnoradio
    show if:
      code: |
        defendant_and_plaintiff_are_parents_of_child # means parents of any children
---
id: non_parent_children
question: |
  % if ( children_cares_for.target_number == 1 ):
  Tell us about the child in your home who you care and take responsiblity for
  % else:
  % if i == 0:
  Tell us about the oldest child in your home who you care and take responsiblity for
  % else:
  You have already told us
  about ${comma_and_list(children_cares_for.complete_elements())}. 

  Tell us about the ${ordinal(i)} child in your home who you care and take responsiblity for.
  % endif
  % endif
subquestion: |
  You said you look after a child who lives with you but is not your own. Because they are under 18, the court needs to know about them also.
fields:
  - First Name: children_cares_for[i].name.first
  - Middle Name: children_cares_for[i].name.middle
    required: False
  - Last Name: children_cares_for[i].name.last
  - Suffix: children_cares_for[i].name.suffix
    required: False
  - Birthdate: children_cares_for[i].birthdate
    datatype: date
    min: ${ today().minus(years=18) }
    validation messages:
      min: |
        The court asks only for children under 18.
  - Is ${other_parties.familiar()} this child's parent?: children_cares_for[i].defendant_is_parent
    datatype: yesnoradio
    show if:
      code: |
        defendant_and_plaintiff_are_parents_of_child # means of any children
  - note: |  
      In some cases, to keep children safe, a judge **can** order ${other_parties.familiar()} not to contact ${other_parties.familiar()}'s children. But it is complicated to convince a judge to make this order.
      
      You may have to file a guardianship case also.  [Talk to a lawyer](https://MassLegalHelp.org/find-legal-aid) if you need the judge to order ${other_parties.familiar()} to have no contact with this child.
    show if: children_cares_for[i].defendant_is_parent
---
id: custody_children
question: |
  Which children do you need the court to give you custody of?
fields:
  - no label: wants_custody_of
    datatype: object_checkboxes
    choices: |
      children_of_both
    none of the above: |
      None of them
---
id: no_contact_children
question: |
  Which children do you need the court to order ${other_parties.familiar()} not to contact?
fields:
  - no label: wants_no_contact_for
    datatype: object_checkboxes
    choices: |
      children + children_cares_for
    none of the above: |
      ${other_parties.familiar()} can contact my ${children.as_noun()}.
---
id: reasons_no_contact
question: |
  Why should the court order ${other_parties.familiar()} not to contact your ${children.as_noun()}?
subquestion: |
  Did your ${children.as_noun()} witness the abuse you describe in your affidavit? 
  
  How has the abuse affected them?
  
  How would contact with ${other_parties.familiar()} affect your ${children.as_noun()}?
fields:
  - no label: reasons_for_no_contact
    datatype: area
---
id: plaintiff_wants_defendant_to_stay_away_from_schools_daycares
question: |
  Do you need the court to tell ${other_parties.familiar()} to stay away from your ${children.as_noun()}'s school or daycare?
yesno: schools_to_stay_away_from.there_are_any
---
# For listing for each child (if we choose to do that), see
# 209A_affidavit_disclosing_care_or_custody_proceedings.yml on its branch
id: schools_and_daycares
question:
  What are the schools or daycare centers you need the court to order ${other_parties.familiar()} to stay away from?
list collect: True
minimum number: 1
fields:
  - School or daycare name: schools_to_stay_away_from[i].name.text
  - Street address: schools_to_stay_away_from[i].address.address
    address autocomplete: True
  # needed?
  - Unit: schools_to_stay_away_from[i].address.unit
    required: False
  - City: schools_to_stay_away_from[i].address.city
  - State: schools_to_stay_away_from[i].address.state
    code: |
      states_list()
    default: MA      
  - Zip: schools_to_stay_away_from[i].address.zip 
---
id: wants_to_request_visitation_details
question: |
  Visitation
subquestion: |
  Do you need the court to make an order about ${other_parties.familiar()}’s
  visitation with the children as part of the restraining order?

  Remember, if you ask for visitation you can only file in the Probate and
  Family Court. A visitation order becomes an order of the court, and if you
  don't follow this order exactly, you will be in contempt of court.  
yesno: wants_visitation_orders
---
id: visitation
# field: visitation_info
question: |
  Before you ask the judge to order Visitation
subquestion: |
  If your ${children.as_noun()} need to spend time with ${other_parties.familiar()}, they need to be safe and you need to be safe. 

  You can ask the District Court, Boston Municipal Court (BMC) and Superior Court to order only safe ways ${other_parties.familiar()} can spend time with your children. Or, you can ask the Probate and Family Court for “visitation.”

  **District Court, BMC or Superior Court**
 
  If you ask the District Court, BMC or Superior Court for a restraining order, you can ask the judge to order that:
 
  1. You have custody of your children, and 
  2. ${other_parties.familiar()} has contact with your children **only** in ways that are safe. You can be detailed about safe ways for them to spend time together. Or
  3.  You can ask the judge to order ${other_parties.familiar()} to have no contact with your children.

  **Probate and Family Court**
  
  The  Probate and Family Court is the only court that can order visitation. If you ask the Probate and Family Court for a restraining order:
 
  1. The judge will probably ask you about visitation.
  2. You will have to explain why the visitation you are asking for is necessary.
  3. You must follow the visitation order you get. Visitation orders are not flexible.
  4. When you go back to court for the 10-day hearing, ${other_parties.familiar()} will have a chance to give their opinion and they may bring up visitation. You will have to explain again why you need the order you ask for.
  
   ${other_parties.familiar()} may take you to court again and again to try to change the order.
 
  If you do not follow the order **exactly** as it is written, you will be in contempt of court.  
 
  Read more about [Visitation](https://www.masslegalhelp.org/domestic-violence/where-can-i-get-209a#bettercourt).

  Do you need the 209A restraining order to include an order about "visitation"?
yesno: wants_visitation_orders
---
Comment: |
  The [doc that was linked](https://docs.google.com/document/d/1WyQrjTCzpZEoFlQZeS0h-JudAFvvefKcvmqNNqJUIH0/edit?usp=sharing) in the pg. 2 doc
id: visitation order
question: |
  What do you need in the visitation order?
subquestion: |
  Think about the visitation schedule you need. Write it down and be prepared to explain to the court why this schedule works for you and your children. 
 
  Think about if supervised visitation may be the best option for your ${children.as_noun()}. Keep in mind that the judge **will** take ${other_parties.familiar()}'s view into account as well. And the judge may not order exactly what you ask for.
  
  Is [supervised visitation](https://www.masslegalhelp.org/domestic-violence/supervised-visitation) the best option for you?  

  What do you need the court to order about ${other_parties.familiar()}’s visitation?
  If you pick 'Allow', you can ask for supervised visitation and other protections next.
fields:
  - no label: prohibit_visitation
    input type: radio
    choices:
    - Allow ${other_parties.familiar()} to have visitation.  : False
    - Order ${other_parties.familiar()} to have no visitation with my children.: True
---
id: safe_visits
# Are we sure we want these all on the same page?
# Note: have not yet looked into checkboxes with
# `show if:`s between them.
question: |
  Keep visits safe
subquestion: |
  What do you and your children need in the visitation order so they can spend time with ${other_parties.familiar()} safely?
# Original language won't work with yes/no questions, which is what is most straightforward to code.
# Pick all that apply.
fields:
  # Original language won't work with yes/no question. See above
  #- '**Defendants should visit with children at a supervised visitation center.**': wants_center
  - '${other_parties.familiar()} should visit with my ${children.as_noun()} at a supervised visitation center': wants_center
    datatype: yesnowide
  - What visitation center?: visitation_center_name
    required: False
    show if: wants_center
  - Who should pay the visitation center’s fees?: pays_for_center
    input type: radio
    show if: wants_center
    choices:
      - ${other_parties.familiar()}: "defendant"
      - Me: "plaintiff"
      - Someone else: "other"
  - Who?: other_pays_for_center
    show if:
      variable: pays_for_center
      is: "other"
  - html: |
      <hr>
    show if: wants_center

  # Original language won't work with yes/no question
  - 'Someone else should supervise ${other_parties.familiar()}’s visits.': wants_supervision
  #- '**Should someone else supervise ${other_parties.familiar()}’s visits?**': wants_supervision
    datatype: yesnowide
  - Who should the supervisor be?: visitation_supervisor_name_full
    show if: wants_supervision
  - When should the visitation happen?: supervision_time
    #datatype: time # Need something more flexible
    show if: wants_supervision
  - Professional supervisors charge fees.  Who should pay those fees?: supervision_payer
    input type: radio
    show if: wants_supervision
    choices:
      - ${other_parties.familiar()}: "defendant"
      - Me: "plaintiff"
      - Someone else: "other"
    required: False
  - Who?: other_supervision_payer
    show if:
      variable: supervision_payer
      is: "other"
  - html: |
      <hr>
    show if: wants_supervision

  # Original language won't work with yes/no question
  - 'Someone else should pick up and drop off my ${children.as_noun()} for visits.': wants_pickup
  #- '**Should someone else to pick up and drop off the children for visits?**': wants_pickup
    datatype: yesnowide
  - Who should pick up and drop off the child(ren)?: who_picks_up
    show if: wants_pickup
  - html: |
      <hr>
    show if: wants_pickup

  # Original language won't work with yes/no question
  - I need the vistitation order to include some other things also.: wants_other_order
  #- '**Do you need the Court to make some other order about visitation?**': wants_other_order
    datatype: yesnowide
  - What else do you need the court to order?: other_order
    input type: area
    show if: wants_other_order
---
id: child support
question: |
  Before you ask the judge to order child support
subquestion: |
  Think carefully about asking for child support in the 209A order. 
  
  Only you know how safe it is to ask the court to order ${other_parties.familiar()} to pay you anything. 

  If ${other_parties.familiar()} is angry about paying child support, ${other_parties.familiar()} may be more likely to threaten you or hurt you, **or** take you to court to ask for custody, parenting time, or to make decisions about your ${children.as_noun()}'s life. 

  It may be worth it to get a child support order. All parents should support their children. But if you believe that asking for child support is dangerous, you might be better off not asking for it. Child support might not be worth risking your health and safety, or the health and safety of your ${children.as_noun()}. 
  
  You can always talk with a domestic violence advocate for help. [Safelink](https://www.casamyrna.org/get-support/safelink): 877-785-2020
  Learn more: Read [Is filing for child support safe?](https://www.masslegalhelp.org/domestic-violence/child-support/is-filing-safe) on MassLegalHelp.org
    
  **Note:** The judge will not order ${other_parties.familiar()} to pay you anything until the 10 day hearing. At that hearing ${other_parties.familiar()} will know you have a restraining order and if you have asked for child support, ${other_parties.familiar()} will know that also.
continue button field: child_support_safety
---
# comment: |
#   fields:
#   - no label: wants_child_support_for
#     datatype: object_checkboxes
#     choices: |
#       children_of_both
#     none of the above: |
#       I do not need court to order ${other_parties.familiar()} to pay support
id: seeking_child_support
question: |
  Do you need the judge to order ${other_parties.familiar()} to pay you child support?
subquestion: |
  You can ask the judge for child support for ${children_of_both}.
  Sometimes, you can also get child support for 
  any children between the age of 18-22 who you share with ${other_parties.familiar()}.

yesno: wants_child_support_yes
---
id: do_non_minors_need_child_support
# TODO: similar to children, get number and then show
# the right number of individual questions.
question: |
  Child support for children over 18
subquestion: |
  Sometimes, you can ask for child support for any children you share with ${other_parties.familiar()} who are between 18 and 22. 
  
  See [Child Support for Children 18-22](https://www.masslegalhelp.org/children-and-families/child-support-over-18) on MassLegalHelp.

  Do you and ${other_parties.familiar()} have any children between 18 and 22 who you need child support for?
yesno: majors_needing_support.there_are_any
---
code: |
  need_help_for_majors = majors_needing_support.there_are_any
---
id: non_minors_needing_child_support
question: |
  Who are your children between 18 and 22? 
subquestion: |
  Include any children who are 22.

  Click "${word("Add another")}" to add more.
list collect: True
fields:
  - First Name: majors_needing_support[i].name.first
  - Middle Name: majors_needing_support[i].name.middle
    required: False
  - Last Name: majors_needing_support[i].name.last
  - Suffix: majors_needing_support[i].name.suffix
    required: False
---
question: |
  Do you already have court-ordered child support?
subquestion: |
  Has the court already ordered child support for any
  children you have with ${other_parties.familiar()}, including
  ${comma_and_list(children_of_both, and_string=word("or"))}?
yesno: existing_order
---
question: |
  It looks like you can't request child support in this interview
subquestion: |
  If a judge already made a child support order for 
  ${comma_and_list(all_support_children, and_string=word("or"))},
  you can't use this form to change it.
continue button field: explain_no_child_support  
# ---
# id: have_there_been_other_cases
# question: |
#   Affidavit of Care or Custody
# subquestion: |
#   The next section is about any cases involving your children that you share with ${other_parties.familiar()}.

#   You said that you and ${other_parties.familiar()} share these children in common: ${children_of_both}.

#   Do your children have any past or ongoing cases?

#   * Divorce
#   * CRA etc. [TODO: Caroline will fill this in]

# yesno: have_had_custody_cases
# ---
# id: paternity
# question: |
#   Have there ever been any cases between you and the Defendant about the paternity of a child?
# yesno: have_had_paternity_cases
# REMOVED in stitchup
---
id: preview attachment
continue button field: A_complaint_for_protection_from_abuse_probation_copy0005_preview_question
question: |
  Placeholder preview screen
subquestion: |
  Here is a preview of the form you'll sign. Take a look and make sure everything is marked correctly. If it's not marked correctly, please let us know and contact a lawyer for more help.
  
  ${A_complaint_for_protection_from_abuse_probation_copy0005_attachment_preview}
---
attachment:
    variable name: A_complaint_for_protection_from_abuse_probation_copy0005_attachment_preview
    name: 209A Page 2
    filename: A_Page_2
    pdf template file: 209A_complaint_page2.pdf
    fields: 
      - "signature_date": ${ signature_date }
      - "signature_date__2": ${ signature_date }
      - "have_had_custody_cases_yes": ${ have_had_custody_cases }
      - "have_had_custody_cases_no": ${ not have_had_custody_cases }
      - "have_had_paternity_cases_no": ${ not have_had_paternity_cases }
      - "have_had_paternity_cases_yes": ${ have_had_paternity_cases }
      # TODO: pdf has wrong boolean ('yes')
      - "requests_custody_yes": ${ requests_custody_yes }
      - "wants_custody_of1_name_full": ${ wants_custody_of1_name_full }
      - "wants_custody_of1_age": ${ wants_custody_of1_age }
      - "wants_custody_of4_name_full": ${ wants_custody_of4_name_full }
      - "wants_custody_of4_age": ${ wants_custody_of4_age }
      - "wants_custody_of2_name_full": ${ wants_custody_of2_name_full }
      - "wants_custody_of2_age": ${ wants_custody_of2_age }
      - "wants_custody_of5_name_full": ${ wants_custody_of5_name_full }
      - "wants_custody_of5_age": ${ wants_custody_of5_age }
      - "wants_custody_of3_name_full": ${ wants_custody_of3_name_full }
      - "wants_custody_of3_age": ${ wants_custody_of3_age }
      - "wants_custody_of6_name_full": ${ wants_custody_of6_name_full }
      - "wants_custody_of6_age": ${ wants_custody_of6_age }
      - "wants_no_contact_for1_name_full": ${ wants_no_contact_for1_name_full }
      - "wants_no_contact_for1_age": ${ wants_no_contact_for1_age }
      - "wants_no_contact_for4_name_full": ${ wants_no_contact_for4_name_full }
      - "wants_no_contact_for4_age": ${ wants_no_contact_for4_age }
      - "wants_no_contact_for2_name_full": ${ wants_no_contact_for2_name_full }
      - "wants_no_contact_for2_age": ${ wants_no_contact_for2_age }
      - "wants_no_contact_for5_name_full": ${ wants_no_contact_for5_name_full }
      - "wants_no_contact_for5_age": ${ wants_no_contact_for5_age }
      - "wants_no_contact_for3_age": ${ wants_no_contact_for3_age }
      - "wants_no_contact_for6_name_full": ${ wants_no_contact_for6_name_full }
      - "wants_no_contact_for3_name_full": ${ wants_no_contact_for3_name_full }
      - "wants_no_contact_for6_age": ${ wants_no_contact_for6_age }
      - "reasons_no_contact": ${ reasons_no_contact }
      # TODO: add '_yes' to field name
      - "keep_away_from_schools_daycares": ${ keep_away_from_schools_daycares }
      - "schools_to_stay_away_from": ${ schools_to_stay_away_from_pdf }
      # TODO: wrong field type for bool?
      # TODO: better name? (wants_visitation_orders)
      - "permit_visitation_yes": ${ permit_visitation_yes }
      # TODO: wrong field types for visitation bools or for non-visitation ones?
      - "prohibit_visitation_yes": ${ prohibit_visitation_yes }
      - "visitation_center_name": ${ visitation_center_name }
      - "wants_visitation_center_yes": ${ wants_visitation_center_yes }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_center_payor_name": ${ visitation_center_payor_name }
      - "visitation_supervisor_name": ${ visitation_supervisor_name }
      - "wants_supervision_yes": ${ wants_supervision_yes }
      - "visitation_times": ${ visitation_times }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_supervision_payor_name": ${ visitation_supervision_payor_name }
      - "third_party_name": ${ third_party_name }
      - "wants_third_party_yes": ${ wants_third_party_yes }
      - "other_order_discription": ${ other_order_discription }
      - "wants_other_order_yes": ${ wants_other_order_yes }
      # right bool type
      - "wants_child_support_yes": ${ wants_child_support_yes }
      # Probation copy
      - "have_had_custody_cases_yes__2": ${ have_had_custody_cases }
      - "have_had_custody_cases_no__2": ${ not have_had_custody_cases }
      - "have_had_paternity_cases_no__2": ${ not have_had_paternity_cases }
      - "have_had_paternity_cases_yes__2": ${ have_had_paternity_cases }
      - "requests_custody_yes__2": ${ requests_custody_yes }
      - "wants_custody_of1_name_full__2": ${ wants_custody_of1_name_full }
      - "wants_custody_of1_age__2": ${ wants_custody_of1_age }
      - "wants_custody_of4_name_full__2": ${ wants_custody_of4_name_full }
      - "wants_custody_of4_age__2": ${ wants_custody_of4_age }
      - "wants_custody_of2_name_full__2": ${ wants_custody_of2_name_full }
      - "wants_custody_of2_age__2": ${ wants_custody_of2_age }
      - "wants_custody_of5_name_full__2": ${ wants_custody_of5_name_full }
      - "wants_custody_of5_age__2": ${ wants_custody_of5_age }
      - "wants_custody_of3_name_full__2": ${ wants_custody_of3_name_full }
      - "wants_custody_of3_age__2": ${ wants_custody_of3_age }
      - "wants_custody_of6_name_full__2": ${ wants_custody_of6_name_full }
      - "wants_custody_of6_age__2": ${ wants_custody_of6_age }
      - "wants_no_contact_for1_name_full__2": ${ wants_no_contact_for1_name_full }
      - "wants_no_contact_for1_age__2": ${ wants_no_contact_for1_age }
      - "wants_no_contact_for4_name_full__2": ${ wants_no_contact_for4_name_full }
      - "wants_no_contact_for4_age__2": ${ wants_no_contact_for4_age }
      - "wants_no_contact_for2_name_full__2": ${ wants_no_contact_for2_name_full }
      - "wants_no_contact_for2_age__2": ${ wants_no_contact_for2_age }
      - "wants_no_contact_for5_name_full__2": ${ wants_no_contact_for5_name_full }
      - "wants_no_contact_for5_age__2": ${ wants_no_contact_for5_age }
      - "wants_no_contact_for3_age__2": ${ wants_no_contact_for3_age }
      - "wants_no_contact_for6_name_full__2": ${ wants_no_contact_for6_name_full }
      - "wants_no_contact_for3_name_full__2": ${ wants_no_contact_for3_name_full }
      - "wants_no_contact_for6_age__2": ${ wants_no_contact_for6_age }
      - "reasons_no_contact__2": ${ reasons_no_contact }
      - "keep_away_from_schools_daycares__2": ${ keep_away_from_schools_daycares }
      - "schools_to_stay_away_from__2": ${ schools_to_stay_away_from_pdf }
      - "permit_visitation_yes__2": ${ permit_visitation_yes }
      - "prohibit_visitation_yes__2": ${ prohibit_visitation_yes }
      - "visitation_center_name__2": ${ visitation_center_name }
      - "wants_visitation_center_yes__2": ${ wants_visitation_center_yes }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_center_payor_name__2": ${ visitation_center_payor_name }
      - "visitation_supervisor_name__2": ${ visitation_supervisor_name }
      - "wants_supervision_yes__2": ${ wants_supervision_yes }
      - "visitation_times__2": ${ visitation_times }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_supervision_payor_name__2": ${ visitation_supervision_payor_name }
      - "third_party_name__2": ${ third_party_name }
      - "wants_third_party_yes__2": ${ wants_third_party_yes }
      ###################
      # TODO: fix pdf fields?
      ###################
      - "other_order_discription": ${ other_order_discription }
      - "wants_other_order_yes__2": ${ wants_other_order_yes }
      - "wants_child_support_yes__2": ${ wants_child_support_yes }
---
# mandatory: True
question: |
  Placeholder download screen
subquestion: |
  Placeholder
buttons:
  - Exit: exit
  - Restart: restart
attachment code: A_complaint_for_protection_from_abuse_probation_copy0005_attachment
---
need: A_complaint_for_protection_from_abuse_probation_copy0005
attachment:
    variable name: A_complaint_for_protection_from_abuse_probation_copy0005_attachment
    name: 209A Page 2
    filename: A_Page_2
    pdf template file: 209A_complaint_page2.pdf
    fields:
      - "user_signature": ${ users[0].signature }
      - "user_signature_probation_copy": ${ users[0].signature }
      - "signature_date": ${ signature_date }
      - "signature_date__2": ${ signature_date }
      - "have_had_custody_cases_yes": ${ have_had_custody_cases }
      - "have_had_custody_cases_no": ${ not have_had_custody_cases }
      - "have_had_paternity_cases_no": ${ not have_had_paternity_cases }
      - "have_had_paternity_cases_yes": ${ have_had_paternity_cases }
      - "requests_custody_yes": ${ requests_custody_yes }
      - "wants_custody_of1_name_full": ${ wants_custody_of1_name_full }
      - "wants_custody_of1_age": ${ wants_custody_of1_age }
      - "wants_custody_of4_name_full": ${ wants_custody_of4_name_full }
      - "wants_custody_of4_age": ${ wants_custody_of4_age }
      - "wants_custody_of2_name_full": ${ wants_custody_of2_name_full }
      - "wants_custody_of2_age": ${ wants_custody_of2_age }
      - "wants_custody_of5_name_full": ${ wants_custody_of5_name_full }
      - "wants_custody_of5_age": ${ wants_custody_of5_age }
      - "wants_custody_of3_name_full": ${ wants_custody_of3_name_full }
      - "wants_custody_of3_age": ${ wants_custody_of3_age }
      - "wants_custody_of6_name_full": ${ wants_custody_of6_name_full }
      - "wants_custody_of6_age": ${ wants_custody_of6_age }
      - "wants_no_contact_for1_name_full": ${ wants_no_contact_for1_name_full }
      - "wants_no_contact_for1_age": ${ wants_no_contact_for1_age }
      - "wants_no_contact_for4_name_full": ${ wants_no_contact_for4_name_full }
      - "wants_no_contact_for4_age": ${ wants_no_contact_for4_age }
      - "wants_no_contact_for2_name_full": ${ wants_no_contact_for2_name_full }
      - "wants_no_contact_for2_age": ${ wants_no_contact_for2_age }
      - "wants_no_contact_for5_name_full": ${ wants_no_contact_for5_name_full }
      - "wants_no_contact_for5_age": ${ wants_no_contact_for5_age }
      - "wants_no_contact_for3_age": ${ wants_no_contact_for3_age }
      - "wants_no_contact_for6_name_full": ${ wants_no_contact_for6_name_full }
      - "wants_no_contact_for3_name_full": ${ wants_no_contact_for3_name_full }
      - "wants_no_contact_for6_age": ${ wants_no_contact_for6_age }
      - "reasons_no_contact": ${ reasons_no_contact }
      - "keep_away_from_schools_daycares": ${ keep_away_from_schools_daycares }
      - "schools_to_stay_away_from": ${ schools_to_stay_away_from_pdf }
      - "permit_visitation_yes": ${ permit_visitation_yes }
      - "prohibit_visitation_yes": ${ prohibit_visitation_yes }
      - "visitation_center_name": ${ visitation_center_name }
      - "wants_visitation_center_yes": ${ wants_visitation_center_yes }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_center_payor_name": ${ visitation_center_payor_name }
      - "visitation_supervisor_name": ${ visitation_supervisor_name }
      - "wants_supervision_yes": ${ wants_supervision_yes }
      - "visitation_times": ${ visitation_times }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_supervision_payor_name": ${ visitation_supervision_payor_name }
      - "third_party_name": ${ third_party_name }
      - "wants_third_party_yes": ${ wants_third_party_yes }
      - "other_order_discription": ${ other_order_discription }
      - "wants_other_order_yes": ${ wants_other_order_yes }
      - "wants_child_support_yes": ${ wants_child_support_yes }
      # Probation copy
      - "have_had_custody_cases_yes__2": ${ have_had_custody_cases }
      - "have_had_custody_cases_no__2": ${ not have_had_custody_cases }
      - "have_had_paternity_cases_no__2": ${ not have_had_paternity_cases }
      - "have_had_paternity_cases_yes__2": ${ have_had_paternity_cases }
      - "requests_custody_yes__2": ${ requests_custody_yes }
      - "wants_custody_of1_name_full__2": ${ wants_custody_of1_name_full }
      - "wants_custody_of1_age__2": ${ wants_custody_of1_age }
      - "wants_custody_of4_name_full__2": ${ wants_custody_of4_name_full }
      - "wants_custody_of4_age__2": ${ wants_custody_of4_age }
      - "wants_custody_of2_name_full__2": ${ wants_custody_of2_name_full }
      - "wants_custody_of2_age__2": ${ wants_custody_of2_age }
      - "wants_custody_of5_name_full__2": ${ wants_custody_of5_name_full }
      - "wants_custody_of5_age__2": ${ wants_custody_of5_age }
      - "wants_custody_of3_name_full__2": ${ wants_custody_of3_name_full }
      - "wants_custody_of3_age__2": ${ wants_custody_of3_age }
      - "wants_custody_of6_name_full__2": ${ wants_custody_of6_name_full }
      - "wants_custody_of6_age__2": ${ wants_custody_of6_age }
      - "wants_no_contact_for1_name_full__2": ${ wants_no_contact_for1_name_full }
      - "wants_no_contact_for1_age__2": ${ wants_no_contact_for1_age }
      - "wants_no_contact_for4_name_full__2": ${ wants_no_contact_for4_name_full }
      - "wants_no_contact_for4_age__2": ${ wants_no_contact_for4_age }
      - "wants_no_contact_for2_name_full__2": ${ wants_no_contact_for2_name_full }
      - "wants_no_contact_for2_age__2": ${ wants_no_contact_for2_age }
      - "wants_no_contact_for5_name_full__2": ${ wants_no_contact_for5_name_full }
      - "wants_no_contact_for5_age__2": ${ wants_no_contact_for5_age }
      - "wants_no_contact_for3_age__2": ${ wants_no_contact_for3_age }
      - "wants_no_contact_for6_name_full__2": ${ wants_no_contact_for6_name_full }
      - "wants_no_contact_for3_name_full__2": ${ wants_no_contact_for3_name_full }
      - "wants_no_contact_for6_age__2": ${ wants_no_contact_for6_age }
      - "reasons_no_contact__2": ${ reasons_no_contact }
      - "keep_away_from_schools_daycares__2": ${ keep_away_from_schools_daycares }
      - "schools_to_stay_away_from__2": ${ schools_to_stay_away_from_pdf }
      - "permit_visitation_yes__2": ${ permit_visitation_yes }
      - "prohibit_visitation_yes__2": ${ prohibit_visitation_yes }
      - "visitation_center_name__2": ${ visitation_center_name }
      - "wants_visitation_center_yes__2": ${ wants_visitation_center_yes }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_center_payor_name__2": ${ visitation_center_payor_name }
      - "visitation_supervisor_name__2": ${ visitation_supervisor_name }
      - "wants_supervision_yes__2": ${ wants_supervision_yes }
      - "visitation_times__2": ${ visitation_times }
      # 'plaintiff' and 'defendant' are both ok
      - "visitation_supervision_payor_name__2": ${ visitation_supervision_payor_name }
      - "third_party_name__2": ${ third_party_name }
      - "wants_third_party_yes__2": ${ wants_third_party_yes }
      ###################
      # TODO: fix
      ###################
      - "other_order_discription": ${ other_order_discription }
      - "wants_other_order_yes__2": ${ wants_other_order_yes }
      - "wants_child_support_yes__2": ${ wants_child_support_yes }
---
comment: Addenda related code. 
code: |  
  txtFieldsList_page2 = list()      
  Limit1 = 75
  sLimit1 = Limit1 - 16   
  need_noContact_addendum = len(reasons_for_no_contact) > Limit1
  if need_noContact_addendum:    
    reasons_for_no_contact_cutoff = reasons_for_no_contact[:sLimit1] + " (See Addendum.)" 
    txtFieldsList_page2.append(
      {'title': 'C. CUSTODY - The specific reasons for this request are:',
      'value': [reasons_for_no_contact_cutoff]
      })
  else:
    reasons_for_no_contact_cutoff = reasons_for_no_contact
    
  Limit2 = 70
  sLimit2 = Limit2 - 16   
  need_school_addendum = len(school_strings) > Limit2
  if need_school_addendum:    
    school_strings_cutoff = school_strings[:sLimit2] + " (See Addendum.)" 
    txtFieldsList_page2.append(
      {'title': 'D. CONTACT WITH CHILDREN - I ask the Court to order the Defendant remain away from the following school(s) and day care(s):',
      'value': [schools_to_stay_away_from_pdf]
      })
  else:
    school_strings_cutoff = school_strings
  
  addAddendum_page2 = False
  if txtFieldsList_page2: #if the list is not empty
    addAddendum__page2 = True
---
if: addAddendum__page2
attachment:
  - variable name: page2_addendum
    docx template file: 209A_page2_addendum.docx