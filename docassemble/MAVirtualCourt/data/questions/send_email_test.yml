---
include:
  - basic-questions.yml
---
modules:
  - .upload
---
question: |
  Testing sending emails and viewing submissions
subquestion: |
  The goal of the interview is to test and verify sending completed interviews, as well as verifying that the submissions can be only viewed by authorized individuals.
  
  You will fill out a few extremely short interviews, which we will then send to an email you have provided us.
continue button field: saw_intro
---
question: |
  Where should we send your emails
subquestion: |
  In an actual interview, we would send the email to a court. 
  However, to prevent unnecessary spam, please provide a name and court that we will treat as an actual court.
  
  We will set this fake court as your preferred court. In an actual interview, we would ask you for your preffered court.

  Make sure that you have access to the email you have provided. 
  For best testing, please provide an email that is not the one you are currently using to sign into this account.
fields:
  - Fake court name: fake_court_name
  - Fake court email: fake_court_email
    datatype: email
---
question: |
  Interview 0
subquestion: |
  This screen does **not** test sending emails.
  Rather, it tests whether or not we are able to save metadata and allow the appropriate users access.

  This test will work best if you have installed the package.
  If you have not, the links provided will **not** work. 

  Do you want to run this test?
yesno: wants_submission_test
---
attachment:
  variable name: interveiw_0_attachment
  filename: interveiw_0_attachment
  persistent: True
  private: True
  content: |
    This is interview 0 for the court ${ fake_court_name }
---
question: |
  Interview 0 result
subquestion: |
  We have just compiled and submitted your attachment [here](${ interveiw_0_attachment.url_for() }) 
  Your submission id is **${submission_id_0}**.
  
  You can access your submission using the following link:
  **[${ url_for_submission(id=submission_id_0)}](${ url_for_submission(id=submission_id_0)})**.
  
  If you click on the link, you should see the following page:

  #### Expected content

  You are authorized to see submission ${ submission_id_0 }

  * interveiw_0_attachment: [${ interveiw_0_attachment.url_for() }](${ interveiw_0_attachment.url_for() }).
field: finished_interview_0
---
question: |
  Interview 1
subquestion: |
  In this first interview, we will just ask you your name. 
continue button field: saw_interview_1
---
attachment:
  variable name: interveiw_1_attachment
  filename: interveiw_1_attachment
  persistent: True
  private: True
  content: |
    This is interview 1.
    Your name is ${ users[0].name }
---
question: |
  Sending interview 1
subquestion: |
  We have now assembled the first interview.

  ${ interveiw_1_attachment }

  Please press 'continue' to send this email. 
  We will then ask you to verify that you have received the email.
continue button field: send_interview_1
---
question: |
  Results of sending interview 1
subquestion: |
  % if result_1:
    According to our records, the email has been sent successfully!
    Please check the email ${ fake_court_email }.

    You should see the following:

    Dear ${ fake_court_name }:

    You are receiving 1 file(s) from ${ users[0].name }: 

    interveiw_1_attachment.pdf

    At the bottom, you should also see a link.
    If you click on the link, it should take you to a page to view submissions.

    Please note, this link will only work properly if this package is installed on the server
  % else:
    According to our records, the email did not send successfully.
    
    If you have confirmed that ${ fake_court_email } is a real email, then there is probably a problem with the code.
  % endif

  You can review your subquestion [here](${ url_for_submission(id=submission_id_1) })
continue button field: to_interview_2
---
question: |
  Interview 2
subquestion: |
  Now, let's complete another interview so that we can test sending multiple attachments.
continue button field: saw_interview_2
---
question: |
  Sample question
subquestion: |
  Fill in whatever you want here.
fields:
  - Textbox: interview_2_textbox
    input type: area
---
attachment:
  variable name: interveiw_2_attachment
  filename: interveiw_2_attachment
  persistent: True
  private: True
  content: |
    This is interview 2.
    Your name is ${ users[0].name }.\

    You said ${ interview_2_textbox}
---
question: |
  Sending interview 2
subquestion: |
  We have now assembled the second interview.

  ${ interveiw_2_attachment }

  We will now send you an email containing both interviews.
continue button field: send_interview_2
---
question: |
  Results of sending interview 2
subquestion: |
  % if result_2:
    According to our records, the email has been sent successfully!
    Please check the email ${ fake_court_email }.

    You should see the following:

    Dear ${ fake_court_name }:

    You are receiving 2 file(s) from ${ users[0].name }: 

    interveiw_1_attachment.pdf
    
    interveiw_2_attachment.pdf

    At the bottom, you should also see a link.
    If you click on the link, it should take you to a page to view submissions/
  % else:
    According to our records, the email did not send successfully.
    
    If you have confirmed that ${ fake_court_email } is a real email, then there is probably a problem with the code.
  % endif

  You can review your subquestion [here](${ url_for_submission(id=submission_id_1) })
continue button field: to_interview_3
---
progress: 100
event: complete_test
question: |
  That's it!
subquestion: |
  If both emails sent successfully (matching the format exactly), they the tests have succeeded.

  However, if any of the emails did **not** send correctly, please make note of that.
---
mandatory: True
code: |
  saw_intro
  court_emails[fake_court_name] = fake_court_email
  emails_to_courts = reverse_dictionary(court_emails)

  if wants_submission_test:
    files = [interveiw_0_attachment.pdf]
    interveiw_0_attachment
    submission_id_0 = new_entry(court_emails=court_emails, court_name=fake_court_name, name="Dummy User", files=files)
    finished_interview_0

  saw_interview_1
  interveiw_1_attachment
  send_interview_1

  name = str(users[0].name)
  
  result_1

  to_interview_2
  saw_interview_2
  interview_2_textbox
  interveiw_2_attachment
  send_interview_2
  result_2
  
  to_interview_3
  complete_test
---
code: |
  files_1 = [interveiw_1_attachment.pdf]
  submission_id_1 = new_entry(court_emails=court_emails, court_name=fake_court_name, name=name, files=files_1)
  result_1 = send_attachments(name=name, court_name=fake_court_name, court_emails=court_emails, files=files_1, submission_id=submission_id_1)
---
code: |
  files_2 = [interveiw_1_attachment.pdf, interveiw_2_attachment.pdf]
  submission_id_2 = new_entry(court_emails=court_emails, court_name=fake_court_name, name=name, files=files_2)
  result_2 = send_attachments(name=name, court_name=fake_court_name, court_emails=court_emails, files=files_2, submission_id=submission_id_2)
