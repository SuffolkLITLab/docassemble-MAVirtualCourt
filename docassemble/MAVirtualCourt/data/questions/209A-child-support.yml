include:
  - docassemble.MAVirtualCourt:basic-questions.yml
---
comment: |
  We need to add labels to this form to capture weekly or monthly information.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008']"):
    interview_metadata.initializeObject('Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008')
  interview_metadata['Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008'].update({
    'title': 'Plaintiff\'s Affidavit in Support of Request for Child support Order',
    'short title': 'Plaintiff 209A Child Support Affidavit',
    'description': 'Plaintiff affidavit in support of request for child support order - laura gal edited damico first quality check ready for upload',
    'original_form': 'https://www.mass.gov/doc/plaintiffs-affidavit-in-support-of-request-for-a-child-support-order-gl-c-209a/download',
    'allowed courts': [
      'Boston Municipal Court',
      'District Court',
      'Probate and Family Court',
      'Superior Court',
    ],
    'preferred court': 'District Court',
    'categories': [
      'Domestic Violence / Safety of self',
      'Family Law',
    ],
    'logic block variable': 'Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008',
    'attachment block variable': 'Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment',
    'typical role': 'plaintiff',
    'built_in_fields_used': [
      {'variable': 'plaintiff_name',
       'transformed_variable': 'str(plaintiffs[0])',
      },
      {'variable': 'other_party',
       'transformed_variable': 'str(other_parties[0])',
      },
      {'variable': 'child1_name',
       'transformed_variable': 'str(children[1-1])',
      },
      {'variable': 'child2_name',
       'transformed_variable': 'str(children[2-1])',
      },
      {'variable': 'child3_name',
       'transformed_variable': 'str(children[3-1])',
      },
      {'variable': 'child4_name',
       'transformed_variable': 'str(children[4-1])',
      },
      {'variable': 'signature_date',
       'transformed_variable': 'signature_date',
      },
      {'variable': 'user_signature',
       'transformed_variable': 'users[0].signature',
      },
      ],
    'fields': [
      {'variable': 'court_division',
       'transformed_variable': 'courts[0].division',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'user_name_print',
       'transformed_variable': 'users[0].name_print',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'other_party_occupation',
       'transformed_variable': 'other_parties[0].occupation',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'other_party_employer',
       'transformed_variable': 'other_parties[0].employer',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'other_party_address',
       'transformed_variable': 'other_parties[0].address',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      {'variable': 'user_gross_income',
       'transformed_variable': 'users[0].gross_income',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'user_health_insurance_payment',
       'transformed_variable': 'users[0].health_insurance',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'user_dental_vision_insurance_payment',
       'transformed_variable': 'users[0].dental_vision_insurance',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'user_child_care_expenses',
       'transformed_variable': 'users[0].child_care_expenses',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'user_child_care_other',
       'transformed_variable': 'users[0].child_care_other',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'other_party_gross_income',
       'transformed_variable': 'other_parties[0].gross_income',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'other_party_health_insurance_payment',
       'transformed_variable': 'other_parties[0].health_insurance',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'other_party_dental_vision_insurance_payment',
       'transformed_variable': 'other_parties[0].dental_vision_insurance',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'other_party_child_care_expenses',
       'transformed_variable': 'other_parties[0].child_care_expenses',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'other_party_child_care_other',
       'transformed_variable': 'other_parties[0].child_support_other',
      'field_type': 'text',
      'field_data_type': 'currency',
      },
      {'variable': 'user_states_above_true',
       'transformed_variable': 'users[0].states_above_true',
      'field_type': 'yesno',
      },
      {'variable': 'user_name_print',
       'transformed_variable': 'users[0].name_print',
      'field_type': 'text',
      'field_data_type': 'text',
      },
      ],
  })
---
id: child support intro
comment: |
  This question is used to introduce your interview. Please customize
continue button field: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_intro
question: |
  Plaintiff's Affidavit in Support of Request for Child support Order
subquestion: |
  If you have legal custody of your child,  you can ask the court
  to order ${other_parties.familiar()} to pay child support. 
  
  You need to fill out an Affidavit in Support of Request for a Child Support Order. The
  following questions ask you about ${other_parties.familiar()}'s job, their employer,
  and their income and expenses. Answer as much as you know. You will also
  need to provide your income and expenses. This way, the court can look at each
  parent's finances and calculate how much the child support will be. 

  Reminder: The judge will not order support right away. You have to wait for the judge to decide about child support at the hearing 10 days later.
---
id: mother_or_father
question: |
  What is ${other_parties.familiar()}'s relationship to ${all_support_children}?
subquestion: |  
  The child support affidavit asks you to tell the court if ${other_parties.familiar()}
  is "the mother" or "the father" of the children you need child support for.

  If you choose an answer that is not "mother" or "father," this section will be blank on the form. The judge may still ask you to pick mother or father.
fields:
  - ${other_parties.familiar()} is: other_parties[0].defendant_parental_role
    input type: radio
    choices:
      - the mother of ${all_support_children}: "mother"
      - the father of ${all_support_children}: "father"
      - A non-binary parent: "non-binary"
      - None of these or prefer not to say: "none of these"
---
id: defendants insurance
question: |
  ${other_parties.familiar()}'s insurance expenses
subquestion: |
  Tell the court as much as you can about ${other_parties.familiar()} expenses. 
fields:
  - note: |
      **Does ${other_parties.familiar()} pay for health insurance?**
  - no label: other_has_health_insurance
    datatype: yesnomaybe
  - note: |
      How much does ${other_parties.familiar()} pay for health insurance?
    show if: other_has_health_insurance
  - no label: other_parties[0].health_insurance
    datatype: currency
    min: 0
    show if: other_has_health_insurance
  - "Weekly or Monthly": other_parties[0].health_insurance_interval
    show if: other_has_health_insurance
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
  - note: |
      <hr/>
      **Does ${other_parties.familiar()} pay for dental and/or vision insurance?**
  - no label: other_has_dental
    datatype: yesnomaybe
  - note: |
      How much does ${other_parties.familiar()} pay for dental and/or vision insurance?
    show if: other_has_dental
  - no label: other_parties[0].dental_vision_insurance
    datatype: currency
    min: 0
    show if: other_has_dental
  - "Weekly or Monthly": other_parties[0].dental_vision_insurance_interval
    show if: other_has_dental
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
---
id: defendants childcare
question: |
  ${other_parties.familiar()}'s childcare expenses
fields:
  - note: |
      **Does ${other_parties.familiar()} pay for childcare expenses for the children you share?**
  - no label: other_has_childcare
    datatype: yesnomaybe
  - note: |
      How much does ${other_parties.familiar()} pay for those expenses?
    show if: other_has_childcare
  - no label: other_parties[0].child_care_expenses
    datatype: currency
    min: 0
    show if: other_has_childcare
  - "Weekly or Monthly": other_parties[0].child_care_expenses_interval
    show if: other_has_childcare
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
  - note: |
      <hr/>
      **Does ${other_parties.familiar()} pay child support?**
  - no label: defendant_pays_child_support
    datatype: yesnomaybe
  - note: |
      How much child support does ${other_parties.familiar()} pay for other children? 
    show if: defendant_pays_child_support
  - no label: other_parties[0].child_support_other
    datatype: currency
    min: 0
    show if: defendant_pays_child_support
  - "Weekly or Monthly": other_parties[0].other_child_support_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    show if: defendant_pays_child_support
---
id: defendants income
question: |
  ${other_parties.familiar()}'s income
subquestion: |
  As far as you know, what is ${other_parties.familiar()}'s gross income? "Gross" means before taxes.  You can give weekly or monthly income.
  
  Put in the best information you know, even if you do not know the
  exact amount. Click "I do not know" if you have no idea.
fields:
  - I don't know ${other_parties.familiar()}'s income amount.: dont_know_op_income
    datatype: yesno
  - Income: other_parties[0].gross_income
    datatype: currency
    min: 0
    hide if: dont_know_op_income
  - "Weekly or monthly": other_parties[0].gross_income_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    hide if: dont_know_op_income      
---
id: defendants work
question: |
  ${other_parties.familiar()}'s Work
fields:
  - note: |
      **Does ${other_parties.familiar()} earn money from their work?**
  - no label: other_parties[0].gainfully_employed
    datatype: yesnoradio
---
id: defendant not working
question: |
  ${other_parties.familiar()} is not working
subquestion: |
  Generally, parents have a responsibility to contribute to the 
  support of their children. So the court can order a parent to pay a 
  minimum amount of child support recommended by the Child Support Guidelines, 
  even when that parent has no income. The court can also take other factors 
  and circumstances into account and deviate from the recommended minimum amount.
continue button field: defendant_not_working_warning_given
---
id: defendants job
question: |
  ${other_parties.familiar()}'s work
subquestion: |
  Where and how does ${other_parties.familiar()} work?
fields:
  - 'Occupation': other_parties[0].occupation
    maxlength: 67
  - 'Employer': other_parties[0].employer
    maxlength: 69
    required: False
  - 'Employer Address': other_parties[0].work_address
    address autocomplete: True
    required: False
---
id: your insurance
question: |
  Your insurance expenses
fields:
  - note: |
      **Do you pay for health insurance?**
  - no label: user_has_health_insurance
    datatype: yesnoradio
  - note: |
      How much do you pay for health insurance?
    show if: user_has_health_insurance
  - no label: users[0].health_insurance
    datatype: currency
    min: 0
    show if: user_has_health_insurance
  - "Weekly or monthly": users[0].health_insurance_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    show if: user_has_health_insurance
  - note: |
      <hr/>
      **Do you pay for dental or vision insurance, or both?**
  - no label: user_has_dental_insurance
    datatype: yesnoradio
  - note: |
      How much do you pay for dental or vision insurance or both?
    show if: user_has_dental_insurance
  - no label: users[0].dental_vision_insurance
    datatype: currency
    min: 0
    show if: user_has_dental_insurance
  - "Weekly or monthly": users[0].dental_vision_insurance_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    show if: user_has_dental_insurance
---
id: your expenses
question: |
  Your childcare expenses
subquestion: |
   Include everything you spend on childcare for ${ children_of_both } so you can go to work or get training or education so you **can** get work. Include expenses like the cost of daycare, babysitting, and private school costs.
fields:
  - note: |
      **Do you pay for childcare for the children you share with ${ other_parties.familiar()}?**
  - no label: user_has_child_care_expenses
    datatype: yesnoradio
  - note: |
      How much do you pay for those childcare expenses?
    show if: user_has_child_care_expenses
  - no label: users[0].child_care_expenses
    datatype: currency
    min: 0
    show if: user_has_child_care_expenses
  - "Weekly or monthly": users[0].child_care_expenses_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    show if: user_has_child_care_expenses
---
id: other child support costs
# ${ str(all_support_children) }
question: |
  Child support
fields:
  - note: |
      **Do you have to pay child support for any children other than ${all_support_children}?**
  - no label: pays_child_support
    datatype: yesnoradio
  - note: |
      How much do you pay in child support?
    show if: pays_child_support
  - no label: users[0].child_care_other
    datatype: currency
    min: 0
    show if: pays_child_support
  - "Weekly or monthly": users[0].child_care_other_interval
    show if: pays_child_support
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
---
id: your income
question: |
  Your Income
subquestion: |
  "Gross income" means your income before taxes are taken
  out of your check.  You can enter your weekly or your monthly income. Tap "Help" to learn more. 
fields:
  - note: |
      **Do you have income?**
  - no label: user_has_income
    datatype: yesnoradio
  - note: |
      What is your gross income (before taxes)?
    show if: user_has_income
  - no label: users[0].gross_income
    datatype: currency
    min: 0
    show if: user_has_income
  - "Weekly or monthly": users[0].gross_income_interval
    choices:
      - "Weekly": weekly
      - "Monthly": monthly
    show if: user_has_income
help: |      
   For the Child Support Guidelines, income is gross income from any source. It does not matter if the Internal Revenue Code, Massachusetts Department of Revenue or any oher taxing authority counts the income. But do not count any income from a means-tested public assistance program like, TAFDC, SNAP, means-tested veterans’ benefits or SSI benefits for either parent. Include all income from work:  salaries, wages, overtime, tips, self-employment income, commissions, and bonuses. But the Guidelines say you must also include other kinds of income. Some of these are workers' compensation, unemployment compensation, social security disability benefits that are not because of your child's disability, and net rental income. For a full list of sources of income to  include, read [pages 4-5 of the guidelines](https://www.mass.gov/doc/2018-child-support-guidelines/download#page=4). 
# ---
# comment: |
#   Moved to page 2
# question: |
#   Do you already have court-ordered child support?
# subquestion: |
#   Has the court already ordered child support for any
#   children you have with ${other_parties.familiar()}, including
#   ${comma_and_list(children_of_both, and_string=word("or"))}?
# yesno: existing_order
# ---
# question: |
#   It looks like you can't request child support in this interview
# subquestion: |
#   If a judge already made a child support order for 
#   ${comma_and_list(all_support_children, and_string=word("or"))},
#   you can't use this form to change it.
# continue button field: explain_no_child_support
---
comment: |
  event: mb_kick_out_user_existing_order
  question: |
    We are sorry.
  subquestion: |
    This interview is not for you. DOES ANYONE NEED TO SEE THIS SCREEN OR WILL THE LOGIC JUST MAKE IT SO YOU NEVER SEE THIS INTERVIEW IF YOU AREN'T ELIGIBLE?
---
id: interview_order_Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008
code: |
  # This is a placeholder to control logic flow in this interview
  # It was generated from interview_generator.py as an 'interview order' type question.  
  basic_questions_intro_screen 
  Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_intro
  # Set the preferred/allowed courts for this interview
  # preferred_court = interview_metadata["Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008"]["preferred court"]
  # allowed_courts = interview_metadata["Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008"]["allowed courts"]
  # todo: What should be we doing here?
  #if existing_order:
  #  mb_kick_out_user_existing_order
  #  We don't want to kick out user if they are trying
  # to enforce an existing child support order instead
  # of getting a new one. Just tell them we're not
  # filling out this form.

  # users[0].states_above_true
  users[0].name.first # already gathered in a prior interview?
  str(other_parties[0]) # already gathered in a prior interview?
  other_parties[0].defendant_parental_role
  
  ## User finances
  if not user_has_income:
    users[0].gross_income = 0
    users[0].gross_income_interval = ''
  # insurance
  if not user_has_health_insurance:
    users[0].health_insurance = 0
    users[0].health_insurance_interval = ''
  if not user_has_dental_insurance:
    users[0].dental_vision_insurance = 0
    users[0].dental_vision_insurance_interval = ''
  # child care
  if not user_has_child_care_expenses:
    users[0].child_care_expenses = 0
    users[0].child_care_expenses_interval = ''
  if not pays_child_support:
    users[0].child_care_other = 0
    users[0].child_care_other_interval = ''
  
  # Defendant finances

  if not other_parties[0].gainfully_employed:
    defendant_not_working_warning_given
    other_parties[0].occupation = ''
    other_parties[0].employer = ''
    other_parties[0].work_address = ''
  else:
    other_parties[0].occupation  
  
  # Always ask about income
  if dont_know_op_income:
    other_parties[0].gross_income = "Unknown"
    other_parties[0].gross_income_interval = DAEmpty()
  else:
    other_parties[0].gross_income

  # insurance
  # This is handled in the attachment block now
  if not other_has_health_insurance:
    other_parties[0].health_insurance_interval = ''
  if not other_has_dental:
    other_parties[0].dental_vision_insurance_interval = ''
  # childcare
  if not other_has_childcare:
    other_parties[0].child_care_expenses_interval = ''
  if not defendant_pays_child_support:
    other_parties[0].other_child_support_interval = ''

  # Previous ending logic below here that is
  # controlled by the umbrella now

  # Trigger possibly computed values
  other_parties[0].defendant_parental_role
  dont_know_op_income
  defendant_pays_child_support
  addAddendum_chdSupport
  
  # signature_date
  # By default, we'll mark any un-filled fields as DAEmpty(). This helps avoid errors if you intentionally hide a logic branch or mark a question not required
  # Comment out the line below if you don't want this behavior. 
  # Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_preview_question # Pre-canned preview screen
  # basic_questions_signature_flow
  # users[0].signature

  Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008 = True
---
code: |
  if not existing_order:
    all_support_children = children_of_both + majors_needing_support
  else:
    all_support_children = children_of_both
---
continue button field: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_preview_question
question: |
  Placeholder preview screen
subquestion: |
  Here is a preview of the form you'll sign in the next section. 
  
   ${ Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment_preview }
---
attachment:
    variable name: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment_preview
    name: Plaintiff affidavit in support of request for child support order
    filename: Plaintiff_affidavit_in_support_of_request_for_child_support_order
    # skip undefined: True
    editable: False
    pdf template file: Plaintiff_Affidavit_in_support_of_request_for_child_support_order.pdf
    decimal places: 2    
    fields:
      - "user_states_above_true": ${ True } # Must be True to finish
      - "user_name": ${ users[0] }
      - "other_party": ${ other_parties[0] }
      - "court_division": ${ courts.item(0).division }
      - "user_name_print": ${ users[0] }
      - "other_party_is_mother": ${ other_parties[0].defendant_parental_role == 'mother' }
      - "other_party_is_father": ${ other_parties[0].defendant_parental_role == 'father' }
      - "child_name": ${ all_support_children.item(0) }
      - "child2_name": ${ all_support_children.item(2-1) }
      - "child3_name": ${ all_support_children.item(3-1) }
      - "child4_name": ${ all_support_children.item(4-1) }
      - "other_party_occupation": ${ other_parties[0].occupation }
      - "other_party_employer": ${ other_parties[0].employer }
      - "other_party_employer_address": ${ other_parties[0].work_address }

      # user income and expenses
      - "user_gross_income": ${ thousands(users[0].gross_income) }
      - "user_gross_income_is_per_week": ${ users[0].gross_income_interval == 'weekly' }
      - "user_gross_income_is_per_month": ${ users[0].gross_income_interval == 'monthly' }

      - "user_health_insurance_payment": ${ thousands(users.item(0).health_insurance) }
      - "user_health_insurance_payment_is_per_week": ${ users.item(0).health_insurance_interval == 'weekly' }
      - "user_health_insurance_payment_is_per_month": ${ users.item(0).health_insurance_interval == 'monthly' }

      - "user_dental_vision_insurance_payment": ${ thousands(users.item(0).dental_vision_insurance) }
      - "user_dental_vision_insurance_payment_is_per_week": ${ users.item(0).dental_vision_insurance_interval == 'weekly' }
      - "user_dental_vision_insurance_payment_is_per_month": ${ users.item(0).dental_vision_insurance_interval == 'monthly' }

      - "user_child_care_expenses": ${ thousands(users.item(0).child_care_expenses) }
      - "user_child_care_expenses_is_per_week": ${ users.item(0).child_care_expenses_interval == 'weekly' }
      - "user_child_care_expenses_is_per_month": ${ users.item(0).child_care_expenses_interval == 'monthly' }

      - "user_child_care_other": ${ thousands(users.item(0).child_care_other) }
      - "user_child_care_other_is_per_month": ${ users.item(0).child_care_other_interval == 'monthly' }
      - "user_child_care_other_is_per_week": ${ users.item(0).child_care_other_interval == 'weekly' }

      # other party income and expenses
      - "other_party_gross_income": ${ thousands(yes_no_unknown('other_parties[0].gross_income', not dont_know_op_income)) }
      - "other_party_gross_income_is_per_week": ${ other_parties[0].gross_income_interval == 'weekly' }
      - "other_party_gross_income_is_per_month": ${ other_parties[0].gross_income_interval == 'monthly' }

      - "other_party_health_insurance_payment": ${ thousands(yes_no_unknown('other_parties[0].health_insurance', other_has_health_insurance))}
      - "other_party_health_insurance_payment_is_per_week": ${ other_parties[0].health_insurance_interval == 'weekly' }
      - "other_party_health_insurance_payment_is_per_month": ${ other_parties[0].health_insurance_interval == 'monthly' }

      - "other_party_dental_vision_insurance_payment": ${ thousands(yes_no_unknown('other_parties[0].dental_vision_insurance', other_has_dental))}
      - "other_party_dental_vision_insurance_payment_is_per_week": ${ other_parties[0].dental_vision_insurance_interval == 'weekly' }
      - "other_party_dental_vision_insurance_payment_is_per_month": ${ other_parties[0].dental_vision_insurance_interval == 'monthly' }

      - "other_party_child_care_expenses": ${ thousands(yes_no_unknown('other_parties[0].child_care_expenses',  other_has_childcare)) }
      - "other_party_child_care_expenses_is_per_week": ${ other_parties[0].child_care_expenses_interval == 'weekly' }
      - "other_party_child_care_expenses_is_per_month": ${ other_parties[0].child_care_expenses_interval == 'monthly' }

      - "other_party_child_care_other": ${ thousands(yes_no_unknown('other_parties[0].child_support_other', defendant_pays_child_support))}
      - "other_party_child_care_other_is_per_month": ${ other_parties[0].other_child_support_interval == 'monthly' }
      - "other_party_child_care_other_is_per_week": ${ other_parties[0].other_child_support_interval == 'weekly' }
      
      # Signature
      - "user_name_print__2": ${ users[0] }
      - "signature_date": ${ signature_date }
---
progress: 100
# mandatory: True
event: child_support_download_screen
question: |
  Placeholder download screen
subquestion: |
  Placeholder
  
  ### Next steps
  
  1. Step 1
  1. Step 2
  
  Below is a preview of your form.
  
  ${ Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment }
attachment code: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment
---
need: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008
attachment:
    variable name: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment
    name: Plaintiff 209A Child Support Affidavit
    # skip undefined: True

    filename: Plaintiff_209A_Child_Support_Affidavit
    pdf template file: Plaintiff_Affidavit_in_support_of_request_for_child_support_order.pdf
    decimal places: 2    
    fields:
      - "user_states_above_true": ${ True } # Must be True to finish
      - "user_name": ${ users[0] }
      - "other_party": ${ other_parties[0] }
      - "court_division": ${ courts.item(0).division }
      - "user_name_print": ${ users[0] }
      - "other_party_is_mother": ${ other_parties[0].defendant_parental_role == 'mother' }
      - "other_party_is_father": ${ other_parties[0].defendant_parental_role == 'father' }
      - "child_name": ${ all_support_children.item(0) }
      - "child2_name": ${ all_support_children.item(2-1) }
      - "child3_name": ${ all_support_children.item(3-1) }
      - "child4_name": ${ all_support_children.item(4-1) }
      - "other_party_occupation": ${ other_parties[0].occupation }
      - "other_party_employer": ${ other_parties[0].employer }
      - "other_party_employer_address": ${ other_parties[0].work_address }

      # user income and expenses
      - "user_gross_income": ${ thousands(users[0].gross_income) }
      - "user_gross_income_is_per_week": ${ users[0].gross_income_interval == 'weekly' }
      - "user_gross_income_is_per_month": ${ users[0].gross_income_interval == 'monthly' }

      - "user_health_insurance_payment": ${ thousands(users.item(0).health_insurance) }
      - "user_health_insurance_payment_is_per_week": ${ users.item(0).health_insurance_interval == 'weekly' }
      - "user_health_insurance_payment_is_per_month": ${ users.item(0).health_insurance_interval == 'monthly' }

      - "user_dental_vision_insurance_payment": ${ thousands(users.item(0).dental_vision_insurance) }
      - "user_dental_vision_insurance_payment_is_per_week": ${ users.item(0).dental_vision_insurance_interval == 'weekly' }
      - "user_dental_vision_insurance_payment_is_per_month": ${ users.item(0).dental_vision_insurance_interval == 'monthly' }

      - "user_child_care_expenses": ${ thousands(users.item(0).child_care_expenses) }
      - "user_child_care_expenses_is_per_week": ${ users.item(0).child_care_expenses_interval == 'weekly' }
      - "user_child_care_expenses_is_per_month": ${ users.item(0).child_care_expenses_interval == 'monthly' }

      - "user_child_care_other": ${ thousands(users.item(0).child_care_other) }
      - "user_child_care_other_is_per_month": ${ users.item(0).child_care_other_interval == 'monthly' }
      - "user_child_care_other_is_per_week": ${ users.item(0).child_care_other_interval == 'weekly' }

      # other party income and expenses
      - "other_party_gross_income": ${ thousands(yes_no_unknown('other_parties[0].gross_income', not dont_know_op_income)) }
      - "other_party_gross_income_is_per_week": ${ other_parties[0].gross_income_interval == 'weekly' }
      - "other_party_gross_income_is_per_month": ${ other_parties[0].gross_income_interval == 'monthly' }

      - "other_party_health_insurance_payment": ${ thousands(yes_no_unknown('other_parties[0].health_insurance', other_has_health_insurance))}
      - "other_party_health_insurance_payment_is_per_week": ${ other_parties[0].health_insurance_interval == 'weekly' }
      - "other_party_health_insurance_payment_is_per_month": ${ other_parties[0].health_insurance_interval == 'monthly' }

      - "other_party_dental_vision_insurance_payment": ${ thousands(yes_no_unknown('other_parties[0].dental_vision_insurance', other_has_dental))}
      - "other_party_dental_vision_insurance_payment_is_per_week": ${ other_parties[0].dental_vision_insurance_interval == 'weekly' }
      - "other_party_dental_vision_insurance_payment_is_per_month": ${ other_parties[0].dental_vision_insurance_interval == 'monthly' }

      - "other_party_child_care_expenses": ${ thousands(yes_no_unknown('other_parties[0].child_care_expenses',  other_has_childcare)) }
      - "other_party_child_care_expenses_is_per_week": ${ other_parties[0].child_care_expenses_interval == 'weekly' }
      - "other_party_child_care_expenses_is_per_month": ${ other_parties[0].child_care_expenses_interval == 'monthly' }

      - "other_party_child_care_other": ${ thousands(yes_no_unknown('other_parties[0].child_support_other', defendant_pays_child_support))}
      - "other_party_child_care_other_is_per_month": ${ other_parties[0].other_child_support_interval == 'monthly' }
      - "other_party_child_care_other_is_per_week": ${ other_parties[0].other_child_support_interval == 'weekly' }
      
      # Signature
      - "user_name_print__2": ${ users[0] }
      - "signature_date": ${ signature_date }
      - "user_signature": ${ users[0].signature }
---
comment: Addenda related code. 
code: |  
  addAddendum_chdSupport = len(all_support_children) > 4
---
attachment:
  - variable name: chdSupport_addendum
    docx template file: 209A_chdSupport_addendum.docx